{"version":3,"sources":["Contexts/ScreenContext.tsx","App.tsx","reportWebVitals.ts","config.ts","Reducers/UserReducer.ts","Reducers/ChatReducer.ts","Reducers/index.ts","Logux/store.ts","Pages/Login/Login.tsx","Components/Preloader/Preloader.tsx","Components/UserPicture/UserPicture.tsx","Pages/Chat/Sidebar/Header/Header.tsx","Utils/keysUtils.ts","Utils/decrypt.ts","Utils/formatDate.ts","Pages/Chat/Sidebar/ChatList/ChatCard.tsx","Contexts/SearchReducer.tsx","Pages/Chat/Sidebar/ChatList/ChatList.tsx","Pages/Chat/Sidebar/Search/Search.tsx","Logux/connect.ts","Pages/Chat/Sidebar/Sidebar.tsx","Pages/Chat/Dialog/Message.tsx","Pages/Chat/Dialog/MessageInput.tsx","Utils/encrypt.ts","Contexts/DialogContext.tsx","Pages/Chat/Dialog/DialogHeader.tsx","Pages/Chat/Dialog/Dialog.tsx","Pages/Chat/Chat.tsx","Pages/Home/Home.tsx","Pages/Register/Register.tsx","index.tsx"],"names":["ScreenContext","React","createContext","undefined","screenReducer","state","action","type","height","window","innerHeight","width","innerWidth","Error","initialState","ScreenProvider","children","useReducer","value","dispatch","Provider","useScreen","context","useContext","App","useEffect","vh","document","documentElement","style","setProperty","addEventListener","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","server_url","socket_url","user_id","username","pub_key","picture","chats","chat_id","messages","actionCreator","actionCreatorFactory","changeChat","setChatId","getMessages","setMessageRead","searchUsers","createChat","sendMessage","rootReducer","combineReducers","userReducer","localStorage","setItem","payload","token","chat","filter","c","console","log","i","indexOf","content","read","date","message_id","fromMe","from","getItem","messageAt","x","unshift","chatReducer","data","push","id","Date","length","m","userId","client","CrossTabClient","subprotocol","server","store","createStoreCreator","createStore","Login","useState","password","key","credentials","setCredentials","handleChange","target","name","history","useHistory","className","onSubmit","preventDefault","setStage","Client","on","AES","decrypt","private_key","toString","enc","Utf8","changeUser","alert","reason","start","add","sync","login","p","placeholder","onChange","to","Preloader","UserPicture","props","includes","src","alt","background","toUpperCase","SidebarHeader","onClick","setOpen","user","formatKey","decodeBase64","decryptMessage","secretOrSharedKey","messageWithNonce","public_key","messageWithNonceAsUint8Array","nonce","slice","box","nonceLength","message","decrypted","open","after","error","base64DecryptedMessage","encodeUTF8","JSON","parse","text","isToday","today","getDate","getMonth","getFullYear","formatDate","d","rl","Intl","RelativeTimeFormat","now","diff","getTime","getHours","Math","floor","format","round","toLocaleTimeString","hour","minute","isYesterday","toLocaleDateString","day","month","year","formatTime","ChatCard","useDispatch","meta","datetime","opts","minInterval","info","generateText","SearchContext","searchReducer","users","SearchProvider","useSearch","ChatList","search","useRef","getState","ChatCards","setChatCards","listener","chatArray","forEach","nanoid","toLowerCase","subscribe","SidebarSearch","input","isOpened","current","setTimeout","setOpened","focus","ref","query","handleSearch","connector","connect","pg","screen","_","Message","useSelector","useMemo","isRead","setRead","messageRef","isActionSent","useParams","rect","getBoundingClientRect","top","scrollCallback","setMessage","inputRef","handleSend","msg","json","nacl","randomBytes","messageUint8","decodeUTF8","stringify","encrypted","fullMessage","Uint8Array","set","encodeBase64","encryptMessage","onInput","handleInput","DialogContext","dialogReducer","DialogProvider","DialogHeader","params","page","prevScrollHeight","isRequested","setRequested","dialog","useDialog","isSubscribing","useSubscription","setMsg","messagesDiv","callbacks","subcribeToScroll","callback","useCallback","ev","response","isMe","msgComp","socket","subscribeToScroll","scrollTop","scrollTo","scrollHeight","onScroll","badge","synchronized","disconnected","wait","sending","protocolError","syncError","denied","styles","badgeStyles","Home","isLoggined","setLoginned","Register","keyPair","publicKey","secretKey","generateKeyPair","doesMeetReqs","setMeetReq","isSame","setSame","match","encrypt","register","disabled","ReactDOM","render","StrictMode","exact","path","component","getElementById"],"mappings":"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","file":"static/js/main.d416b505.chunk.js","sourcesContent":["import React from 'react'\n\ntype Action = {type: 'CHANGE'}\ntype Dispatch = (action: Action) => void\n\nconst ScreenContext = React.createContext<\n{state: {\n    width: number,\n    height: number\n}; dispatch: Dispatch;} | undefined\n>(undefined)\n\nconst screenReducer = (state: {\n    width: number,\n    height: number\n}, action: Action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                height: window.innerHeight,\n                width: window.innerWidth\n            }\n        default: {\n          throw new Error(`Unhandled action type: ${action}`)\n        }\n      }\n}\nconst initialState: {\n    width: number,\n    height: number\n} = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\nconst ScreenProvider = ({children}: {children: React.ReactNode}) => {\n    const [state, dispatch] = React.useReducer(screenReducer, initialState)\n    // NOTE: you *might* need to memoize this value\n    // Learn more in http://kcd.im/optimize-context\n    const value = {state, dispatch, }\n    return <ScreenContext.Provider value={value}>{children}</ScreenContext.Provider>\n}\nconst useScreen = () => {\n    const context = React.useContext(ScreenContext)\n    if (context === undefined) {\n      throw new Error('useCount must be used within a CountProvider')\n    }\n    return context\n  }\n  \nexport {ScreenContext, ScreenProvider, useScreen}","import React, { useEffect } from 'react';\nimport './App.css';\nimport { useScreen } from './Contexts/ScreenContext';\n\nconst App: React.FunctionComponent = ({children}) => {\n  const {dispatch} = useScreen()\n  useEffect(() => {\n    let vh = window.innerHeight * 0.01\n    document.documentElement.style.setProperty('--vh', `${vh}px`)\n    window.addEventListener('resize', (e) => {\n      dispatch({type: 'CHANGE'})\n      let vh = window.innerHeight * 0.01\n      document.documentElement.style.setProperty('--vh', `${vh}px`)\n    })\n  }, [])\n  return <>\n    {children}\n  </>\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const config = {\n  server_url: 'https://chat.ciphen.net/',\n  socket_url: 'wss://chat.ciphen.net:31337/'\n}\nexport default config\n","import {ChatResponse} from \"../Typings/ChatReponse\";\n\ninterface UserState {\n  username: string\n  user_id: string\n  pub_key: string\n  picture: string\n  chats: ChatResponse[]\n}\n\n\nconst initialState: UserState = {\n  user_id: '',\n  username: '',\n  pub_key: '',\n  picture: '',\n  chats: []\n}\n\nconst userReducer = (state = initialState, action: {type: string, payload: any}) => {\n  switch (action.type) {\n    case 'login/done': {\n      localStorage.setItem('token', action.payload.token)\n      return state\n    }\n    case 'chat/message/create': {\n      const chat = state.chats.filter(c => c.chat_id === action.payload.chat_id)\n      console.log(chat)\n      if (chat[0]) {\n        const i = state.chats.indexOf(chat[0])\n        chat[0].messages[0] = {\n          content: action.payload.content,\n          read: action.payload.read,\n          date: action.payload.date,\n          message_id: action.payload.message_id,\n          fromMe: action.payload.from === localStorage.getItem('user_id')\n        }\n        chat[0].messageAt = action.payload.date\n        if (i !== 0) {\n          state.chats = state.chats.filter(x => x !== chat[0])\n          state.chats.unshift(chat[0])\n        }\n      }\n      return state\n    }\n    case 'user/get_info/done': {\n      return action.payload\n    }\n    default: {\n      return state\n    }\n  }\n}\nexport {userReducer}","import {ChatResponse} from \"../Typings/ChatReponse\";\nimport {Message} from \"../Typings/Message\";\nimport store from \"../Logux/store\";\n\ntype ChatState = {\n  messages: Message[],\n  username: string,\n  pub_key: string,\n  picture: string\n  user_id: string,\n  chat_id: string\n}\n\n\nconst initialState: ChatState = {\n  username: '',\n  user_id: '',\n  picture: '',\n  pub_key: '',\n  chat_id: '',\n  messages: [],\n}\nconst chatReducer = (state = initialState, action: {type: string, payload?: any, id?: string}) => {\n  const data = action.payload\n  switch (action.type) {\n    case 'chat/message/add': {\n      console.log('NEW MESSAGE')\n      state.messages.push(...data)\n      return {...state}\n    }\n\n    case 'chat/load_messages/done': {\n      state.messages = [...data.messages, ...state.messages]\n      state.pub_key = data.pub_key\n      return {...state}\n    }\n    case 'chat/change': {\n      return {\n        username: '',\n        user_id: '',\n        picture: '',\n        pub_key: '',\n        chat_id: action.payload.id,\n        messages: [],\n      }\n    }\n    case 'chat/messages/send': {\n      console.log(action.payload)\n      state.messages.push({\n        content: action.payload.content,\n        read: false,\n        date: new Date(),\n        message_id: '',\n        fromMe: true\n      })\n      console.log(state.messages)\n      return state\n    }\n    case 'chat/message/setId': {\n      if (state.chat_id === action.payload.chat_id)\n        state.messages[state.messages.length - 1].message_id = action.payload.id\n      return state\n    }\n    case 'chat/message/create': {\n      if (state.chat_id === action.payload.chat_id && action.payload.from !== localStorage.getItem('user_id')) {\n        if (!state.messages.filter(m => action.payload.message_id === m.message_id)[0]) {\n          state.messages.push({\n            content: action.payload.content,\n            read: action.payload.read,\n            date: action.payload.date,\n            message_id: action.payload.message_id,\n            fromMe: action.payload.from === localStorage.getItem('user_id')\n          })\n        }\n      }\n      return state\n    }\n    case 'chat/change_key': {\n      state.pub_key = action.payload\n      return state\n    }\n    case 'chat/set_id': {\n      state.chat_id = action.payload.id\n      console.log(state)\n      return state\n    }\n    case 'chat/message/read': {\n      if (action.payload.chat_id === state.chat_id)\n        state.messages.filter(m => m.message_id === action.payload.message_id)[0].read = true\n      return state\n    }\n    case 'chat/data/set': {\n      return {...state, ...data}\n    }\n    default: {\n      return state\n    }\n  }\n}\nconst userReducer = (state = initialState, action: {type: string, payload: any}) => {\n  switch (action.type) {\n    case 'login/done': {\n      localStorage.setItem('token', action.payload.token)\n      return state\n    }\n    case 'user/get_info/done': {\n      return action.payload\n    }\n    default: {\n      return state\n    }\n  }\n}\nexport {chatReducer}","import {userReducer} from \"./UserReducer\";\n\nimport { combineReducers, Reducer } from \"redux\";\nimport actionCreatorFactory, { isType } from \"typescript-fsa\";\nimport {chatReducer} from \"./ChatReducer\";\n\nconst actionCreator = actionCreatorFactory();\n\nexport const changeChat = actionCreator<{ id: string }>(\"chat/change\");\nexport type changeChatAction = ReturnType<typeof changeChat>;\nexport const setChatId = actionCreator<{ id: string }>(\"chat/set_id\");\nexport type setChatIdAction = ReturnType<typeof setChatId>;\n\nexport const getMessages = actionCreator<{ pg: number, chat_id: string }>(\"chat/messages/get\");\nexport type getMessagesAction = ReturnType<typeof getMessages>;\n\nexport const setMessageRead = actionCreator<{ message_id: string, chat_id: string }>(\"chat/message/read\");\nexport type setMessageReadAction = ReturnType<typeof setMessageRead>;\n\nexport const searchUsers = actionCreator<{ query: string }>(\"users/search\");\nexport type searchUsersAction = ReturnType<typeof searchUsers>;\n\nexport const createChat = actionCreator<{ user_id: string }>(\"chat/create\");\nexport type createChatAction = ReturnType<typeof createChat>;\n\nexport const sendMessage = actionCreator<{\n  content: string,\n  from: string\n  chat_id: string\n}>(\"chat/messages/send\");\nexport type sendMessage = ReturnType<typeof sendMessage>;\n\nexport type SubscribeAction = { type: \"logux/subscribe\"; channel: string };\nexport const subscribe = (channel: string): SubscribeAction => ({\n  type: \"logux/subscribe\",\n  channel,\n});\n\ntype Actions =\n  changeChatAction\n  | SubscribeAction\n  | getMessagesAction\n  | setChatIdAction\n  | sendMessage\n\n\nconst rootReducer = combineReducers({\n  userReducer,\n  chatReducer\n})\n\nexport default rootReducer\nexport type RootState = ReturnType<typeof rootReducer>;","import { CrossTabClient, log } from '@logux/client'\nimport { createStoreCreator } from '@logux/redux'\nimport config from \"../config\";\nimport rootReducer from \"../Reducers\";\n\nlet userId = localStorage.getItem('user_id') || 'anonymous'\nlet token = localStorage.getItem('token') || ''\n\nconst client = new CrossTabClient({\n  subprotocol: '1.0.0',\n  server: config.socket_url,\n  userId,\n  token\n})\n\nconst createStore = createStoreCreator(client)\n\nconst store = createStore(rootReducer)\nlog(store.client)\n\nexport default store","import React, {useEffect, useState} from \"react\";\nimport {Link, Redirect, useHistory} from \"react-router-dom\";\nimport './Login.scss';\nimport Preloader from \"../../Components/Preloader/Preloader\";\nimport config from '../../config'\nimport { AES } from \"crypto-js\";\nimport {enc} from 'crypto-js'\nimport {Client} from \"@logux/client\";\nimport store from \"../../Logux/store\";\nfunction login (username: string, password: string, setStage: (p: string) => void) {\n  let client = new Client({\n    subprotocol: '1.0.0',\n    server: config.socket_url,\n    userId: 'anonymous'\n  })\n  client.on('add', (action: any) => {\n    if (action.type === 'login/done') {\n      localStorage.setItem('user_id', action.user_id)\n      localStorage.setItem('token', action.token)\n      localStorage.setItem('key', AES.decrypt(action.private_key, password).toString(enc.Utf8))\n      store.client.changeUser(action.user_id,action.token)\n      setStage('/')\n    } else if (action.type === 'logux/undo') {\n      alert(action.reason)\n    }\n  })\n  client.start()\n  client.log.add({ type: 'login', username, password }, { sync: true })\n}\n\nconst Login: React.FunctionComponent = () => {\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: '',\n    key: ''\n  })\n  const [stage, setStage] = useState(0)\n  const handleChange = (e: any) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    })\n  }\n  const history = useHistory()\n  return <>\n    <div className=\"login_main\">\n      <div className={'login_main__header'}>\n          <h1 className={'login_main__header___title'}>Sign in into your account</h1>\n          <h2 className={'login_main__header___undertitle'}>If you don't have account, sign up using button below</h2>\n      </div>\n      <div className={'login_main__block'}>\n        <form className={'login_main__form'} onSubmit={(e) =>{\n          e.preventDefault()\n          login(credentials.username, credentials.password, (p: string) => history.push(p))\n        }}>\n          <>\n            <h1>Cryptash</h1>\n            <input name={'username'} placeholder={'Username'} className={'login_main__form___username'} onChange={(e) => handleChange(e)}/>\n            <input name={'password'} type={'password'} placeholder={'Password'} className={'login_main__form___password'} onChange={(e) => handleChange(e)}/>\n            <button type={'submit'} className={'login_main__form___submit'}>Login</button>\n            <Link to={'/register'}>Create new account</Link>\n          </>\n        </form>\n      </div>\n    </div>\n  </>\n\n}\n\nexport default Login\n","import React from \"react\";\nimport './Preloader.css'\nconst Preloader: React.FunctionComponent = () => {\n  return <div className=\"lds-roller\">\n    <div/>\n    <div/>\n    <div/>\n    <div/>\n    <div/>\n    <div/>\n    <div/>\n    <div/>\n  </div>\n}\nexport default Preloader\n","import './UserPicture.scss'\nconst UserPicture: React.FunctionComponent<{\n  picture: string, \n  username: string,\n}> = (props) => {\n  if (!props.username) return <></>\n  if (props.picture.includes('http')) {\n    return <>\n      <div className={'profile_picture'}>\n        <img src={props.picture} alt={`${props.username}'s profile pic`} className={'profile_picture__img'} ></img>\n      </div>\n    </>\n  }\n  return <>\n    <div className={'profile_picture'} style={{background: props.picture}}>\n      <span className={'profile_picture__text'}>{props.username[0].toUpperCase()}</span>\n    </div>\n  </>\n}\nexport default UserPicture","import UserPicture from \"../../../../Components/UserPicture/UserPicture\"\nimport './Header.scss'\nimport {useScreen} from \"../../../../Contexts/ScreenContext\";\n\nconst SidebarHeader = (props: {\n  user: {\n    username: string,\n    picture: string\n  }\n  setOpen: () => void\n}) => {\n  const screen = useScreen()\n  return (<>\n    <div className={'chat_sidebar__header'} onClick={(e: any) => {\n      console.log('click')\n      props.setOpen()\n    }}>\n      <UserPicture username={props.user.username} picture={props.user.picture}/>\n      <span className={'chat_sidebar__header___username'}>{props.user.username}</span> \n    </div>\n    \n  </>)\n}\nexport default SidebarHeader","import {decodeBase64, encodeBase64} from 'tweetnacl-util'\nimport {box} from 'tweetnacl'\nexport const formatKey = (key: any) => {\n  // @ts-ignore\n  // eslint-disable-next-line valid-typeof\n  return typeof key === 'Uint8Array' ? key : decodeBase64(key);\n}\n\n\nexport const generateKeyPair = () => {\n  const {publicKey, secretKey} = box.keyPair()\n  return {\n    public_key: encodeBase64(publicKey),\n    private_key: encodeBase64(secretKey),\n  }\n}\n","import {decodeBase64, encodeUTF8} from 'tweetnacl-util'\nimport {box} from 'tweetnacl'\nimport {formatKey} from './keysUtils'\n\nexport const decryptMessage = (secretOrSharedKey: any, messageWithNonce: string, key: any) => {\n  const private_key = formatKey(secretOrSharedKey)\n  const public_key = formatKey(key)\n  const messageWithNonceAsUint8Array = decodeBase64(messageWithNonce)\n  const nonce = messageWithNonceAsUint8Array.slice(0, box.nonceLength)\n  const message = messageWithNonceAsUint8Array.slice(\n      box.nonceLength,\n      messageWithNonce.length\n  )\n  const decrypted = key ?\n      box.open(message, nonce, public_key, private_key) :\n      box.open.after(message, nonce, private_key)\n\n  if (!decrypted) {\n    console.error(\"Couldn't decrypt:\")\n    console.error({messageWithNonce, key, secretOrSharedKey})\n  }\n  if (decrypted) {\n    const base64DecryptedMessage = encodeUTF8(decrypted)\n    return JSON.parse(base64DecryptedMessage)\n  }\n  return {\n    text: ''\n  }\n}\n","const isToday = (date: Date): boolean => {\n  const today = new Date()\n  return date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear();\n};\n\nconst isYesterday = (date: Date): boolean => {\n  const today = new Date()\n  return date.getDate() === today.getDate() - 1 &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear();\n}\n\nconst formatDate = (date: Date | string): string => {\n  const d = new Date(date)\n  const rl = new Intl.RelativeTimeFormat(['en'], {style: 'narrow'})\n  const now = new Date()\n  const diff = now.getTime() - d.getTime()\n  if (isToday(d)) {\n    if (now.getHours() - d.getHours() < 2) {\n      if (Math.floor(diff / 1000 / 60) === 0) {\n        return rl.format(-Math.round(diff / 1000 ), 'seconds')\n      }\n      return rl.format(-Math.round(diff / 1000 / 60), 'minutes')\n    }\n    return d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n  }\n  if (isYesterday(d)) {\n    return `yesterday` \n  }\n  else {\n    return d.toLocaleDateString([], {day: '2-digit', month: 'numeric', year: '2-digit'})\n  }\n\n}\nconst formatTime = (date: Date | string): string | boolean => {\n  const d = new Date(date)\n  const now = new Date()\n  if (isToday(d)) {\n    if (now.getHours() - d.getHours() < 2) {\n      return false\n    }\n    return `today, ${d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}`\n  }\n  else return `${formatDate(d)}, ${d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}`\n}\n\nexport {formatDate, formatTime}","import {useEffect, useState} from \"react\";\nimport TimeAgo from \"timeago-react\";\nimport UserPicture from \"../../../../Components/UserPicture/UserPicture\";\nimport config from \"../../../../config\";\nimport { ChatResponse } from \"../../../../Typings/ChatReponse\";\nimport { decryptMessage } from \"../../../../Utils/decrypt\";\nimport { formatTime } from \"../../../../Utils/formatDate\";\nimport { useHistory } from 'react-router-dom';\nimport {useDispatch} from \"@logux/redux\";\nimport {createChat} from \"../../../../Reducers\";\nimport store from \"../../../../Logux/store\";\n\nconst ChatCard: React.FunctionComponent<{chat: ChatResponse}> = (props) => {\n  const {chat} = props\n  const [isRedirect, SetRedirect] = useState(false)\n  let history = useHistory();\n  const dispatch = useDispatch()\n  useEffect(() => {\n    store.client.log.type('chat/create/done', (action: {\n      type: 'chat/create/done',\n      payload: {\n        chat_id: string\n      }\n    }, meta) => {\n      history.push(`/${action.payload.chat_id}`)\n    })\n  }, []);\n\n  console.log(chat.user.username, chat.messages[0] ? chat.messages[0].date : '')\n  const generateText = () => {\n    if (chat.messages[0]) {\n        try {\n          return decryptMessage(localStorage.getItem('key'),chat.messages[0].content, chat.user.pub_key).text\n        }\n        catch (e) {\n          console.info(e.text)\n          return ''\n        }\n    }\n    return ''\n  }\n  const handleClick = (e: any) => {\n    if (!chat.chat_id) {\n      dispatch.sync(createChat({user_id: chat.user.user_id}))\n    }\n    else {\n      history.push(`/${chat.chat_id}`)\n    }\n  }\n  return <>\n    <div className={'chat_list__card'} onClick={(e) => handleClick(e)}>\n      <UserPicture username={chat.user.username} picture={chat.user.picture}/>\n      <div className={'right'}>\n        <div className={'chat_list__card___top'}>\n          <span className={'chat_list__card___top____username'}>{chat.user.username}</span>\n          <span className={'chat_list__card___top____date'}>\n            {chat.messages[0] && chat.messageAt ? formatTime(chat.messageAt) ? formatTime(chat.messageAt) : <TimeAgo datetime={chat.messageAt} opts={{minInterval: 5}}/> : ''}\n          </span>\n        </div>\n        <div className={'chat_list__card___bottom'}>\n          <span className={'chat_list__card___bottom____content'}>{\n            generateText()\n          }</span>\n        </div>\n      </div>\n    </div>\n  </>\n}\n\nexport default ChatCard","import React from 'react'\nimport { SearchFilter } from '../Typings/SearchFilter'\n\ntype Action = {type: 'CHANGE_FILTER', payload: {\n    type: string\n    filter: string\n}} | {type: 'CHANGE_CHATS', payload: {\n    chats: Array<{\n        username: string\n        picture: string\n        user_id: string\n    }>\n}}\ntype Dispatch = (action: Action) => void\n\nconst SearchContext = React.createContext<\n{state: SearchFilter; dispatch: Dispatch;} | undefined\n>(undefined)\n\nconst searchReducer = (state: SearchFilter, action: Action) => {\n    switch (action.type) {\n        case 'CHANGE_FILTER':\n            if (action.payload.type === 'users')\n                if (action.payload.filter === '')\n                    return {\n                        ...state, \n                        chats: [],\n                        [action.payload.type]: action.payload.filter\n                    }\n            return {\n                    ...state, \n                    [action.payload.type]: action.payload.filter\n                }\n        case 'CHANGE_CHATS': \n            return {\n                ...state,\n                chats: action.payload.chats\n            }\n        default: {\n          throw new Error(`Unhandled action type: ${action}`)\n        }\n      }\n}\nconst initialState: SearchFilter = {\n    users: '',\n    messages: '',\n    chats: []\n}\nconst SearchProvider = ({children}: {children: React.ReactNode}) => {\n    const [state, dispatch] = React.useReducer(searchReducer, initialState)\n    // NOTE: you *might* need to memoize this value\n    // Learn more in http://kcd.im/optimize-context\n    const value = {state, dispatch, }\n    return <SearchContext.Provider value={value}>{children}</SearchContext.Provider>\n}\nconst useSearch = () => {\n    const context = React.useContext(SearchContext)\n    if (context === undefined) {\n      throw new Error('useCount must be used within a CountProvider')\n    }\n    return context\n  }\n  \nexport {SearchContext, SearchProvider, useSearch}","import { ChatResponse } from '../../../../Typings/ChatReponse'\nimport ChatCard from './ChatCard'\nimport {nanoid} from 'nanoid'\nimport './ChatList.scss'\nimport { useSearch } from '../../../../Contexts/SearchReducer'\nimport store from \"../../../../Logux/store\";\nimport {useEffect, useRef, useState} from \"react\";\nconst ChatList = () => {\n  const search = useSearch()\n  const chat = useRef<ChatResponse[]>(store.getState().userReducer.chats)\n  const [ChatCards, setChatCards] = useState<Array<React.FunctionComponentElement<{chat: ChatResponse}>>>([])\n  const listener = (chats: ChatResponse[]) => {\n    const chatArray: Array<React.FunctionComponentElement<{chat: ChatResponse}>> = []\n    if (search.state.chats)\n      search.state.chats.forEach(user => {\n        chatArray.push(<ChatCard chat={{\n          chat_id: '',\n          user,\n          messages: []\n        }} key={nanoid(5)}/>)\n      })\n    chats.forEach((chat: any) => {\n      if (search.state.users) {\n        if (chat.user.username.toLowerCase().includes(search.state.users.toLowerCase())) {\n          chatArray.push(<ChatCard chat={chat} key={chat.chat_id}/>)\n        }\n      }\n      else {\n        chatArray.push(<ChatCard chat={chat} key={chat.chat_id}/>)\n      }\n    })\n    if (chatArray === ChatCards) return\n    setChatCards(chatArray)\n  }\n  useEffect(() => {\n    listener(store.getState().userReducer.chats)\n    store.subscribe(() => {\n      listener(store.getState().userReducer.chats)\n    })\n  }, []);\n  useEffect(() => {\n    listener(store.getState().userReducer.chats)\n  }, [search.state]);\n\n  return <>\n    <div className={'chat_list'}>{ChatCards}</div>\n  </>\n}\nexport default ChatList","import config from '../../../../config'\nimport { useSearch } from '../../../../Contexts/SearchReducer'\nimport './Search.scss'\nimport {useEffect, useRef} from \"react\";\nimport {useDispatch} from \"@logux/redux\";\nimport {searchUsers} from \"../../../../Reducers\";\nimport store from \"../../../../Logux/store\";\n\nconst SidebarSearch = (props: {\n  isOpened: boolean,\n  setOpened: (s: boolean) => void\n}) => {\n  const search = useSearch()\n  const input = useRef<HTMLInputElement>(null)\n  const dispatch = useDispatch()\n  useEffect(() => {\n    store.client.log.type('users/search/done', (action: {\n      type: 'users/search/done',\n      payload: any\n    }, meta) => {\n      search.dispatch({\n        type: 'CHANGE_CHATS',\n        payload: {chats: action.payload.users}\n      })\n    })\n  }, []);\n\n  const handleSearch = (e: {target: {value: string}}) => {\n    search.dispatch({type: 'CHANGE_FILTER', payload: {\n      type: 'users',\n      filter: e.target.value\n    }})\n    if (e.target.value.length < 3) {\n      search.dispatch({type: 'CHANGE_CHATS', payload: {\n        chats: []\n      }})\n      return\n    }\n    dispatch.sync(searchUsers({query: e.target.value}))\n  }\n  return (<>\n    <div className={'chat_sidebar__search'}>\n      <div className={'chat_sidebar__search___bar'} onClick={(e) => {\n        if (!props.isOpened) {\n          if (input.current !== null) {\n            setTimeout(() => {props.setOpened(true); if (input.current !== null) input.current.focus()}, 100)\n          }\n        }\n      }}>\n        <span className=\"material-icons outlined\">\n          search\n        </span>\n        <input type={'text'} className={'chat_sidebar__search___bar-input'} placeholder={'Search users'} ref={input} onChange={(e) => handleSearch(e)}/>\n      </div>\n    </div>\n  </>)\n}\nexport default SidebarSearch","import {changeChat, getMessages, RootState, sendMessage, setChatId} from \"../Reducers\";\nimport {LoguxDispatch} from \"@logux/redux/create-store-creator\";\nimport {Action} from \"redux\";\nimport {connect, ConnectedProps} from \"react-redux\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    user: state.userReducer,\n    chat: state.chatReducer\n  };\n};\n\nconst mapDispatchToProps = (dispatch: LoguxDispatch<Action>) => ({\n  changeChat: (id: string) => {\n    dispatch(changeChat({ id }))\n  },\n  getMessages: (pg: number, chat_id: string) => {\n    dispatch(getMessages({ pg, chat_id }))\n  },\n  setChatId: (id: string) => {\n    dispatch(setChatId({ id }))\n  },\n  sendMessage: (content: string, chat_id: string, from: string) => {\n    dispatch.sync(sendMessage({content, chat_id, from}))\n  }\n});\nconst connector = connect(mapStateToProps, mapDispatchToProps as any);\nexport type Props = ConnectedProps<typeof connector>;\nexport {connector}","import SidebarHeader from \"./Header/Header\"\nimport './Sidebar.scss'\nimport ChatList from \"./ChatList/ChatList\"\nimport SidebarSearch from \"./Search/Search\"\nimport { SearchProvider } from \"../../../Contexts/SearchReducer\"\nimport {useScreen} from \"../../../Contexts/ScreenContext\";\nimport {useEffect, useState} from \"react\";\nimport {connector, Props} from \"../../../Logux/connect\";\n\nconst Sidebar = (props: Props) => {\n  const screen = useScreen()\n  const [isOpened, setOpen] = useState(screen.state.width > 700)\n  useEffect(() => {\n    setOpen(screen.state.width > 700)\n  }, [screen.state]);\n\n  return <>\n  <SearchProvider>\n    <div className={`chat_sidebar ${isOpened ? 'opened' : 'closed'}`}>\n      <SidebarHeader user={{username: props.user.username, picture: props.user.picture}} setOpen={() => {\n        console.log(!isOpened)\n        setOpen(!isOpened)\n      }}/>\n      <SidebarSearch isOpened={isOpened} setOpened={(_: boolean) => setOpen(_)} />\n      <ChatList/>\n    </div>\n  </SearchProvider>\n  </>\n}\nexport default connector(Sidebar);","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { decryptMessage } from \"../../../Utils/decrypt\"\nimport { formatTime } from '../../../Utils/formatDate'\nimport TimeAgo from 'timeago-react';\nimport { useParams } from \"react-router\";\nimport {useSelector} from \"react-redux\";\nimport {RootState, setMessageRead} from \"../../../Reducers\";\nimport {useDispatch} from \"@logux/redux\";\nimport store from \"../../../Logux/store\";\nconst Message: React.FunctionComponent<{\n  content: string\n  pub_key: string\n  date: Date\n  fromMe: boolean\n  isRead: boolean\n  id: string\n  socket: WebSocket\n  subscribeToScroll: Function\n}> = (props) => {\n  const pub_key = useSelector((state: RootState) => state.chatReducer.pub_key)\n  let content:string = useMemo(() => {\n    try {\n      return decryptMessage(localStorage.getItem('key'), props.content, pub_key).text\n    } catch (error) {\n      console.log({error, props})\n      return ''\n    }\n  }, [props]);\n  const [isRead, setRead] = useState(props.isRead)\n  const messageRef = useRef<HTMLDivElement>(null)\n  const isActionSent = useRef(false)\n  const params: {id: string} = useParams()\n  const chat = useSelector((x: RootState) => x.chatReducer)\n  const dispatch = useDispatch()\n  const scrollCallback = () => {\n    if (isRead || props.fromMe || isActionSent.current) return\n    const rect = messageRef.current?.getBoundingClientRect()\n    if (rect) {\n      if (rect.top > 0) {\n        console.log('message read by me ' + props.id)\n        isActionSent.current = true\n        dispatch.sync(setMessageRead({\n          chat_id: chat.chat_id,\n          message_id: props.id\n        })).then(() => isActionSent.current = false)\n          setRead(true)\n      }\n    }\n  }\n  useEffect(() => {\n    // if (!isRead)\n    //   store.subscribe(() => {\n    //     const messages = store.getState().chatReducer.messages\n    //     if (messages.filter((m: any) => m.message_id === props.id)[0].read && !isRead) {\n    //       setRead(true)\n    //     }\n    //   })\n  }, [isRead])\n  useEffect(() => {\n    scrollCallback()\n  }, [])\n  return <>\n    <div className={`chat_dialog__messages-message ${props.fromMe ? 'fromMe' : 'toMe'}`} ref={messageRef}>\n      <div className={`chat_dialog__messages-message_top ${props.fromMe ? 'fromMe' : 'toMe'}`} >\n        <div className={`chat_dialog__messages-message_top-bubble ${props.fromMe ? 'fromMe' : 'toMe'}`}>\n          <span>{content}</span>\n        </div>\n        <div className={`chat_dialog__messages-message_top-context`}>\n          <span className=\"material-icons\">\n            more_horiz\n          </span>\n        </div>\n        {\n          props.fromMe ? (<div className={`chat_dialog__messages-message_top-status`}>\n          <span className=\"material-icons\">\n            {isRead ? 'done_all' :'done'}\n          </span>\n        </div>) : ''\n        }\n        \n      </div>\n      <div className={`chat_dialog__messages-message_bottom ${props.fromMe ? 'fromMe' : 'toMe'}`}>\n      {formatTime(props.date) ? formatTime(props.date) :<TimeAgo\n        datetime={props.date}\n        opts={{minInterval: 10}}\n      />}\n      </div>\n    </div>\n  </>\n}\n\nexport default Message","import {useRef, useState} from 'react'\nimport { encryptMessage } from '../../../Utils/encrypt'\nimport {connector, Props} from \"../../../Logux/connect\";\n\nconst MessageInput: React.FunctionComponent<Props> = (props) => {\n  const [message, setMessage] = useState('')\n  const handleInput = (e: any) => {\n    setMessage(e.target.value)\n  }\n  const inputRef = useRef<HTMLInputElement>(null)\n  const handleSend = (e: any) => {\n    console.log(props.chat)\n    e.preventDefault()\n    const msg = encryptMessage(\n      localStorage.getItem('key'),\n      {\n        text: message,\n      },\n      props.chat.pub_key\n    )\n    props.sendMessage(msg, props.chat.chat_id, localStorage.getItem('user_id'))\n    if (inputRef.current)\n      inputRef.current.value = ''\n      setMessage('')\n  }\n  return <>\n    <div className={'chat_dialog__input'}>\n        <div className={'chat_dialog__input-wrap'}>\n            <form action=\"\" onSubmit={(e) => handleSend(e)}>\n                <input type={'text'} placeholder={'Write a message...'} onInput={(e) => handleInput(e)} ref={inputRef}/>\n                <button type={'submit'} className={'material-icons'}>send</button>\n            </form>\n        </div>\n    </div>\n  </>\n}\n\nexport default connector(MessageInput)","\nimport nacl, {box} from 'tweetnacl'\nimport {decodeUTF8, encodeBase64} from 'tweetnacl-util'\nimport {formatKey} from './keysUtils'\n\nexport const encryptMessage = (secretOrSharedKey: any, json: any, key: any) => {\n  const private_key = formatKey(secretOrSharedKey)\n  const public_key = formatKey(key)\n  const nonce = nacl.randomBytes(box.nonceLength)\n  const messageUint8 = decodeUTF8(JSON.stringify(json))\n  const encrypted = public_key ?\n      box(messageUint8, nonce, public_key, private_key) :\n      box.after(messageUint8, nonce, private_key)\n\n  const fullMessage = new Uint8Array(nonce.length + encrypted.length)\n  fullMessage.set(nonce)\n  fullMessage.set(encrypted, nonce.length)\n  return encodeBase64(fullMessage)\n}\n","import React from 'react'\nimport { Message } from '../Typings/Message'\n\ntype Action = {type: 'ADD_MESSAGE', payload: any} | \n    {type: 'ADD_MORE_MESSAGES', payload: any} | \n    {type: 'CHANGE_KEY', payload: any} | \n    {type: 'REMOVE_MESSAGE', payload: any} | \n    {type: 'EDIT_MESSAGE', payload: any} | \n    {type: 'CHANGE_DIALOG', payload?: any} |\n    {type: 'SET_DIALOG_DATA', payload?: {\n        username?: string,\n        pub_key?: string,\n        user_id?: string,\n        picture?: string\n    }} |\n    {type: 'SET_MESSAGE_READ_STATUS', payload: {id: string}}\ntype Dispatch = (action: Action) => void\ntype DialogState = {\n    messages: Message[],\n    username: string,\n    pub_key: string,\n    picture: string\n    user_id: string,\n}\nconst DialogContext = React.createContext<\n{state: DialogState; dispatch: Dispatch} | undefined\n>(undefined)\nconst dialogReducer = (state: DialogState, action: Action) => {\n    const data = action.payload\n    console.log(action)\n    switch (action.type) {\n        case 'ADD_MESSAGE': {\n            console.log('NEW MESSAGE')\n            state.messages.push(...data)\n            return {...state}\n        }\n        case 'ADD_MORE_MESSAGES': {\n            state.messages = [...data, ...state.messages]\n            return {...state}\n        }\n        case 'CHANGE_DIALOG': {\n            return {\n                username: '',\n                user_id: '',\n                picture: '',\n                pub_key: '',\n                messages: [],\n            }\n        }\n        case 'CHANGE_KEY': {\n            state.pub_key = action.payload\n            return state\n        }\n        case 'SET_MESSAGE_READ_STATUS': {\n            const msg = state.messages.filter(x => x.message_id === data.id)[0]\n            msg.read = true\n            console.log(state)\n            return state\n        }\n        case 'SET_DIALOG_DATA': {\n            return {...state, ...data}\n        }\n        default: {\n          throw new Error(`Unhandled action type: ${action.type}`)\n        }\n      }\n}\nconst initialState: DialogState = {\n    username: '',\n    user_id: '',\n    picture: '',\n    pub_key: '',\n    messages: [],\n}\nconst DialogProvider = ({children}: {children: React.ReactNode}) => {\n    const [state, dispatch] = React.useReducer(dialogReducer, initialState)\n    const value = {state, dispatch, }\n    return <DialogContext.Provider value={value}>{children}</DialogContext.Provider>\n}\nconst useDialog = () => {\n    const context = React.useContext(DialogContext)\n    if (context === undefined) {\n      throw new Error('useCount must be used within a CountProvider')\n    }\n    return context\n  }\n  \nexport {DialogContext, DialogProvider, useDialog}","const DialogHeader: React.FunctionComponent<{\n  socket: WebSocket,\n}> = (props) => {\n  return <>\n    <div className={'chat_dialog__header'}>\n    </div>\n  </>\n}\n\nexport default DialogHeader","import { nanoid } from \"nanoid\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport Preloader from \"../../../Components/Preloader/Preloader\";\nimport Message from \"./Message\";\nimport './Dialog.scss'\nimport MessageInput from \"./MessageInput\";\nimport { useParams } from \"react-router\";\nimport { useDialog } from \"../../../Contexts/DialogContext\";\nimport DialogHeader from \"./DialogHeader\";\nimport {useDispatch, useSubscription} from \"@logux/redux\";\nimport {useSelector} from \"react-redux\";\nimport {getMessages, RootState} from \"../../../Reducers\";\nimport store from \"../../../Logux/store\";\nimport {connector, Props} from \"../../../Logux/connect\";\n\nconst Dialog: React.FunctionComponent<Props> = (props) => {\n  let params: {id: string} = useParams()\n  const dispatch = useDispatch()\n  const page = useRef(0)\n  const prevScrollHeight = useRef(0)\n  const [isRequested, setRequested] = useState(false)\n  const dialog = useDialog()\n  const isSubscribing = useSubscription([`chat/${params.id}`]);\n  const chat = useSelector((state: RootState) => state.chatReducer)\n  const [msg, setMsg] = useState<Array<JSX.Element>>([])\n  const messagesDiv = useRef<HTMLDivElement>(null)\n  const callbacks = useRef<Array<Function>>([])\n  const subcribeToScroll = (callback: Function) => {\n    callbacks.current.push(callback)\n    return () => callbacks.current.filter(x => x !== callback)\n  }\n  useEffect(() => {\n    props.setChatId(params.id)\n  }, []);\n\n  useEffect(() => {\n    props.changeChat(params.id)\n  }, [params.id]);\n\n  const scrollCallback = (e: any) => {\n    callbacks.current.forEach(callback => {\n      callback(e)\n    });\n    if (e.target.scrollTop === 0) {\n      if (!isRequested) {\n        page.current = page.current + 1\n        prevScrollHeight.current = messagesDiv.current? messagesDiv.current.scrollHeight : 0\n        setRequested(true)\n        dispatch.sync(getMessages({pg: page.current, chat_id: params.id})).then(() => setRequested(false))\n      }\n    }\n  }\n  const callback = useCallback((ev: MessageEvent<any>, id) => {\n    const response = JSON.parse(ev.data)\n    if (response.action === 'get_messages') {\n      if (page.current === 0) {\n        dialog.dispatch({type: 'CHANGE_DIALOG'})\n        callbacks.current = []\n        dialog.dispatch({type: 'CHANGE_KEY', payload: response.pub_key})\n        dialog.dispatch({type: 'ADD_MESSAGE', payload: response.messages})\n      }\n      else {\n        if (response.messages[0]) {\n          dialog.dispatch({type: 'ADD_MORE_MESSAGES', payload: response.messages})\n          setRequested(false)\n        } \n      }\n    }\n    if (response.action === 'new_message') {\n      console.log(response.data.message.chat_id, id)\n      if (response.data.message.chat_id === id) {\n        dialog.dispatch({type: 'ADD_MESSAGE', payload: [{\n          content: response.data.message.content,\n          pub_key: dialog.state.pub_key,\n          date: response.data.message.date,\n          fromMe: response.data.message.isMe,\n          read: response.data.message.read,\n          message_id: response.data.message.message_id\n        }]})\n      }\n    }\n    if (response.action === 'message_read_by_user') {\n      if (response.data.chat_id === id)\n        dialog.dispatch({type: 'SET_MESSAGE_READ_STATUS', payload: {\n          id: response.data.message_id\n        }})\n    }\n  }, [dialog.state.user_id])\n  useEffect(() => {\n    store.subscribe(() => {\n      let c = store.getState().chatReducer\n      const msgComp: Array<JSX.Element> = []\n      c.messages.forEach((m: {\n        content: string,\n        fromMe: boolean,\n        date: Date,\n        read: boolean,\n        message_id: string\n      }) => {\n        return msgComp.push(<Message socket={props.socket} id={m.message_id} subscribeToScroll={(c: Function) => subcribeToScroll(c)} isRead={m.read} content={m.content} pub_key={props.chat.pub_key} key={m.message_id} fromMe={m.fromMe} date={m.date} />)\n      });\n      setMsg(msgComp)\n    })\n    const msgComp: Array<JSX.Element> = []\n    chat.messages.forEach((m: {\n      content: string,\n      fromMe: boolean,\n      date: Date,\n      read: boolean,\n      message_id: string\n  }) => {\n      return msgComp.push(<Message socket={props.socket} id={m.message_id} subscribeToScroll={(c: Function) => subcribeToScroll(c)} isRead={m.read} content={m.content} pub_key={props.chat.pub_key} key={nanoid(6)} fromMe={m.fromMe} date={m.date} />)\n  });\n    setMsg(msgComp)\n  },[chat])\n  useEffect(() => {\n    if (messagesDiv.current && (messagesDiv.current.scrollTop > 1000 || page.current === 0)){\n      messagesDiv.current.scrollTo(0,messagesDiv.current ? messagesDiv.current.scrollHeight : 0)\n    }\n    else if (messagesDiv.current)\n      messagesDiv.current.scrollTo(0,messagesDiv.current ? messagesDiv.current.scrollHeight - prevScrollHeight.current : 0);\n  }, [msg, isSubscribing])\n  if (!params.id) {\n    return <div></div>\n  }\n  if (isSubscribing) return <div className={'preloader'}><Preloader /></div>\n  return <>\n    <div className={'chat_dialog'}>\n      <DialogHeader socket={props.socket} />\n      <div className={'chat_dialog__messages'} onScroll={(e) => scrollCallback(e)} ref={messagesDiv}>{msg}</div>\n      <MessageInput {...props}/>\n    </div>\n  </>\n}\nexport default connector(Dialog)","import Sidebar from \"./Sidebar/Sidebar\"\nimport './Chat.scss'\nimport config from '../../config'\nimport React, {useEffect, useRef, useState } from \"react\"\nimport Preloader from '../../Components/Preloader/Preloader'\nimport { useParams } from \"react-router-dom\"\nimport Dialog from \"./Dialog/Dialog\"\nimport { useUser} from '../../Contexts/UserContext'\nimport { DialogProvider } from \"../../Contexts/DialogContext\"\nimport {useSubscription} from \"@logux/redux\";\nimport store from \"../../Logux/store\";\nimport {badge} from \"@logux/client\";\nimport {badgeStyles} from \"@logux/client/badge/styles\";\nimport {connector, Props} from \"../../Logux/connect\";\nimport {Provider} from \"react-redux\";\nconst Chat: React.FunctionComponent<Props> = (props) => {\n  const params: {id: string} = useParams()\n  const isSubscribing = useSubscription([`user/${localStorage.getItem('user_id')}`]);\n  if (params.id === undefined) {\n    console.log('No chat')\n    return (\n      <Provider store={store}>\n        <div className={'chat'}>\n          <Sidebar />\n        </div>\n      </Provider>\n    )\n  }\n\n  if (isSubscribing) {\n    return <Preloader />\n  }\n\n  return (\n    <Provider store={store}>\n      <div className={'chat'}>\n        <Sidebar/>\n        <DialogProvider>\n          <Dialog/>\n        </DialogProvider>\n      </div>\n    </Provider>\n  )\n}\nexport default connector(Chat)","import React, {useState, useEffect} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Preloader from \"../../Components/Preloader/Preloader\";\nimport config from '../../config'\nimport { UserProvider } from '../../Contexts/UserContext';\nimport Chat from '../Chat/Chat';\nimport {badge, Client} from \"@logux/client\";\nimport store from \"../../Logux/store\";\nimport {badgeStyles} from \"@logux/client/badge/styles\";\nimport {Provider} from \"react-redux\";\nbadge(store.client, {messages: {\n    synchronized: 'Sent all unsent messages.',\n    disconnected: 'No connection to server.',\n    wait: 'Waiting...',\n    sending: 'Sending...',\n    error: 'Error occurred. Please, try again!',\n    protocolError: 'Error occurred. Please, contact admins!',\n    syncError: 'Error while syncing...',\n    denied: 'Access denied'\n  }, styles: badgeStyles })\n\nconst Home= () => {\n  const [isLoggined, setLoginned] = useState(0)\n  const token = localStorage.getItem('token')\n  // Check if authenticated\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      let client = new Client({\n        subprotocol: '1.0.0',\n        server: config.socket_url,\n        userId: 'anonymous'\n      })\n      client.on('add', (action: any) => {\n        if (action.type === 'user/check/done') {\n          store.client.start()\n          setLoginned(2)\n        } else if (action.type === 'logux/undo') {\n          setLoginned(0)\n        }\n      })\n      client.start()\n      client.log.add({ type: 'user/check', token: localStorage.getItem('token')}, { sync: true })\n    } else {\n      setLoginned(1)\n    }\n  }, [token])\n\n  if (isLoggined === 0) {\n    return <Preloader />\n  }\n\n  if (isLoggined === 1) {\n    return <Redirect to={'/login'}/>\n  }\n  return (<Provider store={store}>\n    <Chat/>\n  </Provider>\n  )\n  \n}\n\nexport default Home;\n","import React, {useState} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport './Register.scss';\nimport config from '../../config'\nimport { generateKeyPair } from \"../../Utils/keysUtils\";\nimport {Client} from \"@logux/client\";\nimport {AES} from 'crypto-js'\nimport store from \"../../Logux/store\";\nconst Register: React.FunctionComponent = () => {\n  const [key, setKeys] = useState(generateKeyPair())\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  })\n  const [doesMeetReqs, setMeetReq] = useState(false)\n  const [isSame, setSame] = useState(false)\n  let history = useHistory();\n  const handleChange = (e: any) => {\n    console.log(e.target.name, e.target.value)\n    if (e.target.name === 'verify_password') {\n        if (e.target.value === credentials.password) {\n          setSame(true)\n        }\n        else {\n          setSame(false)\n        }\n    }\n    else {\n        setCredentials({\n            ...credentials,\n            [e.target.name]: e.target.value\n        })\n        if (e.target.name === 'password') {\n          let pass_regexp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,31}$/ // 8 to 31 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\n          if (e.target.value.match(pass_regexp)) {\n            setMeetReq(true)\n          }\n          else {\n            setMeetReq(false)\n          }\n        }\n    }\n  }\n  function register (username: string, password: string, key: {\n    private_key: string, public_key: string\n  }) {\n    if (!password || !username) return\n    if (!isSame) return\n    if (!doesMeetReqs) return\n    if (username.length < 3) {\n      alert(\"Username must be at least 3 symbols\")\n      return\n    }\n    let pass_regexp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,31}$/ // 8 to 31 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\n    if (!password.match(pass_regexp)) {\n      setMeetReq(false)\n      return\n    }\n    let client = new Client({\n      subprotocol: '1.0.0',\n      server: config.socket_url,\n      userId: 'anonymous'\n    })\n    client.on('add', (action: any) => {\n      if (action.type === 'register/done') {\n        localStorage.setItem('user_id', action.user_id)\n        localStorage.setItem('token', action.token)\n        localStorage.setItem('key', key.private_key)\n        store.client.changeUser(action.user_id,action.token)\n        history.push(`/`)\n      } else if (action.type === 'logux/undo') {\n        alert(action.reason)\n      }\n    })\n    client.start()\n    client.log.add({ type: 'register', username, password, private_key: AES.encrypt(key.private_key, password).toString(), pub_key: key.public_key}, { sync: true })\n  }\n  const firstStage = () => {\n    return (\n        <>\n          <h1>Cryptash</h1>\n          <input name={'username'} placeholder={'Username'} className={'register_main__form___username'} onChange={(e) => handleChange(e)}/>\n          <input name={'password'} type={'password'} placeholder={'Password'} className={`register_main__form___password ${doesMeetReqs ? '' : 'red-outline'}`} onChange={(e) => handleChange(e)}/>\n          <input name={'verify_password'} type={'password'} placeholder={'Verify Password'} className={`register_main__form___password ${isSame ? '' : 'red-outline'}`} onChange={(e) => handleChange(e)}/>\n          <button type={'submit'} className={'register_main__form___submit'} disabled={!isSame}>Create account</button>\n          <Link to={'/login'}>Back to login</Link>\n        </>\n  )\n  }\n  return <>\n    <div className=\"register_main\">\n      <div className={'register_main__header'}>\n          <h1 className={'register_main__header___title'}>Create your account</h1>\n          <h2 className={'register_main__header___undertitle'}>If you already have an account, login using button below</h2>\n      </div>\n      <div className={'register_main__block'}>\n        <form className={'register_main__form'} onSubmit={(e) =>{\n          e.preventDefault()\n          register(credentials.username, credentials.password, key)\n        }}>\n          {firstStage()}\n        </form>\n      </div>\n    </div>\n  </>\n\n}\n\nexport default Register\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\nimport Login from './Pages/Login/Login';\nimport Home from './Pages/Home/Home';\nimport Register from './Pages/Register/Register';\nimport { ScreenProvider } from './Contexts/ScreenContext';\nReactDOM.render(\n  <React.StrictMode>\n      <ScreenProvider>\n        <BrowserRouter>\n          <App>\n            <Route exact path='/login' component={Login}/>\n            <Route exact path='/register' component={Register}/>\n            <Route path={['/:id', '/']} exact component={Home} />\n          </App>\n        </BrowserRouter>\n      </ScreenProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}