{"version":3,"sources":["Contexts/ScreenContext.tsx","App.tsx","reportWebVitals.ts","Components/Preloader/Preloader.tsx","config.ts","Pages/Login/Login.tsx","Contexts/UserContext.tsx","Components/UserPicture/UserPicture.tsx","Pages/Chat/Sidebar/Header/Header.tsx","Utils/keysUtils.ts","Utils/decrypt.ts","Utils/formatDate.ts","Pages/Chat/Sidebar/ChatList/ChatCard.tsx","Contexts/SearchReducer.tsx","Pages/Chat/Sidebar/ChatList/ChatList.tsx","Pages/Chat/Sidebar/Search/Search.tsx","Pages/Chat/Sidebar/Sidebar.tsx","Pages/Chat/Dialog/Message.tsx","Contexts/DialogContext.tsx","Pages/Chat/Dialog/MessageInput.tsx","Utils/encrypt.ts","Pages/Chat/Dialog/DialogHeader.tsx","Pages/Chat/Dialog/Dialog.tsx","Pages/Chat/Chat.tsx","Pages/Home/Home.tsx","Pages/Register/Register.tsx","index.tsx"],"names":["ScreenContext","React","createContext","undefined","screenReducer","state","action","type","height","window","innerHeight","width","innerWidth","Error","initialState","ScreenProvider","children","useReducer","value","dispatch","Provider","useScreen","context","useContext","App","useEffect","vh","document","documentElement","style","setProperty","addEventListener","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Preloader","className","config","server_url","socket_url","Login","useState","username","password","key","credentials","setCredentials","stage","setStage","isLoading","setLoading","handleChange","target","name","localStorage","getItem","fetch","method","body","JSON","stringify","token","headers","res","json","statusCode","onSubmit","preventDefault","alert","message","setItem","handleLogin","autoComplete","placeholder","onChange","to","UserContext","userReducer","data","payload","chats","filter","chat_id","messages","messageAt","date","sort","a","b","Date","getTime","user_id","picture","pub_key","addMessageToChat","UserProvider","useUser","UserPicture","props","includes","src","alt","background","toUpperCase","SidebarHeader","onClick","console","log","setOpen","user","formatKey","decodeBase64","decryptMessage","secretOrSharedKey","messageWithNonce","private_key","public_key","messageWithNonceAsUint8Array","nonce","slice","box","nonceLength","length","decrypted","open","after","error","base64DecryptedMessage","encodeUTF8","parse","text","isToday","today","getDate","getMonth","getFullYear","formatDate","d","rl","Intl","RelativeTimeFormat","now","diff","getHours","Math","floor","format","round","toLocaleTimeString","hour","minute","isYesterday","toLocaleDateString","day","month","year","formatTime","ChatCard","chat","isRedirect","SetRedirect","Headers","append","handleClick","datetime","opts","minInterval","content","SearchContext","searchReducer","users","SearchProvider","useSearch","ChatList","search","ChatCards","forEach","push","nanoid","toLowerCase","SidebarSearch","input","useRef","isOpened","setOpened","current","setTimeout","focus","ref","query","handleSearch","Sidebar","screen","_","Message","useMemo","isRead","setRead","messageRef","isActionSent","params","useParams","scrollCallback","fromMe","rect","getBoundingClientRect","top","id","socket","send","chatId","messageId","subscribeToScroll","ev","response","message_id","DialogContext","dialogReducer","x","read","DialogProvider","useDialog","MessageInput","setMessage","inputRef","handleSend","msg","nacl","randomBytes","messageUint8","decodeUTF8","encrypted","fullMessage","Uint8Array","set","encodeBase64","encryptMessage","onInput","handleInput","DialogHeader","Dialog","page","prevScrollHeight","isRequested","setRequested","dialog","setMsg","messagesDiv","callbacks","callback","useCallback","isMe","msgComp","m","c","subcribeToScroll","scrollTop","scrollTo","scrollHeight","pg","jwt","removeEventListener","onScroll","Chat","WebSocket","onSocketMessage","event","dir","warn","onopen","mode","rsp","Home","isLoggined","setLoginned","Register","keyPair","publicKey","secretKey","generateKeyPair","doesMeetReqs","setMeetReq","isSame","setSame","match","keyInput","handleRegister","defaultValue","select","execCommand","disabled","ReactDOM","render","StrictMode","exact","path","component","getElementById"],"mappings":"gdAKMA,EAAgBC,IAAMC,mBAK1BC,GAEIC,EAAgB,SAACC,EAGpBC,GACC,OAAQA,EAAOC,MACX,IAAK,SACD,MAAO,CACHC,OAAQC,OAAOC,YACfC,MAAOF,OAAOG,YAEtB,QACE,MAAM,IAAIC,MAAJ,iCAAoCP,MAI9CQ,EAGF,CACAH,MAAOF,OAAOG,WACdJ,OAAQC,OAAOC,aAEbK,EAAiB,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,SAA2C,EACtCf,IAAMgB,WAAWb,EAAeU,GADM,mBAI1DI,EAAQ,CAACb,MAJiD,KAI1Cc,SAJ0C,MAKhE,OAAO,cAACnB,EAAcoB,SAAf,CAAwBF,MAAOA,EAA/B,SAAuCF,KAE5CK,EAAY,WACd,IAAMC,EAAUrB,IAAMsB,WAAWvB,GACjC,QAAgBG,IAAZmB,EACF,MAAM,IAAIT,MAAM,gDAElB,OAAOS,GC3BIE,EAfsB,SAAC,GAAgB,IAAfR,EAAc,EAAdA,SAC9BG,EAAYE,IAAZF,SAUP,OATAM,qBAAU,WACR,IAAIC,EAA0B,IAArBjB,OAAOC,YAChBiB,SAASC,gBAAgBC,MAAMC,YAAY,OAA3C,UAAsDJ,EAAtD,OACAjB,OAAOsB,iBAAiB,UAAU,SAACC,GACjCb,EAAS,CAACZ,KAAM,WAChB,IAAImB,EAA0B,IAArBjB,OAAOC,YAChBiB,SAASC,gBAAgBC,MAAMC,YAAY,OAA3C,UAAsDJ,EAAtD,YAED,IACI,mCACJV,KCFUiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,8BCKCQ,G,YAZ4B,WACzC,OAAO,sBAAKC,UAAU,aAAf,UACL,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,6BCPWC,EAJA,CACbC,WAAY,2BACZC,WAAY,0BC6HCC,EAzFwB,WAAO,IAAD,EACLC,mBAAS,CAC7CC,SAAU,GACVC,SAAU,GACVC,IAAK,KAJoC,mBACpCC,EADoC,KACvBC,EADuB,OAMjBL,mBAAS,GANQ,mBAMpCM,EANoC,KAM7BC,EAN6B,OAOXP,oBAAS,GAPE,mBAOpCQ,EAPoC,KAOzBC,EAPyB,KAQrCC,EAAe,SAAC1B,GACpBqB,EAAe,2BACVD,GADS,kBAEXpB,EAAE2B,OAAOC,KAAO5B,EAAE2B,OAAOzC,UA0D9B,OAtBAO,qBAAU,WACJoC,aAAaC,QAAQ,SACvBC,MAAMnB,EAAOC,WAAa,gBAAiB,CACzCmB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACC,MAAOP,aAAaC,QAAQ,WAClDO,QAAS,CACP,eAAgB,sBAGfjC,MAAK,SAACkC,GAAD,OAASA,EAAIC,UAClBnC,MAAK,SAACkC,GACkB,MAAnBA,EAAIE,aACNf,GAAW,GACXF,EAAS,OAMjBE,GAAW,KAEZ,IACCD,EAAkB,cAAC,EAAD,IACf,mCACL,sBAAKb,UAAU,aAAf,UACE,sBAAKA,UAAW,qBAAhB,UACI,oBAAIA,UAAW,6BAAf,uCACA,oBAAIA,UAAW,kCAAf,sEAEJ,qBAAKA,UAAW,oBAAhB,SACE,sBAAMA,UAAW,mBAAoB8B,SAAU,SAACzC,GAC9CA,EAAE0C,iBA7GQ,SAACtB,EAIlBE,EAAeC,GACF,IAAVD,EACJS,MAAMnB,EAAOC,WAAa,YAAa,CACrCmB,OAAQ,OACRC,KAAMC,KAAKC,UAAUf,GACrBiB,QAAS,CACP,eAAgB,sBAGfjC,MAAK,SAACkC,GAAD,OAASA,EAAIC,UAClBnC,MAAK,SAACkC,GACkB,MAAnBA,EAAIE,WACNG,MAAML,EAAIM,UAEVf,aAAagB,QAAQ,QAASP,EAAIF,OAClCb,EAAS,OAKQ,MAAnBH,EAAYD,MACdU,aAAagB,QAAQ,MAAOzB,EAAYD,KACpCU,aAAaC,QAAQ,QAAQP,EAAS,IAoFtCuB,CAAY1B,EAAaE,EAAOC,IAFlC,SAIGD,EAvDO,IAAVA,EACA,qCACE,gDACA,+DACA,uBAAO/C,KAAM,OACNoC,UAAW,gCACXoC,aAAc,MACdC,YAAa,cAEbC,SAAU,SAACjD,GACTqB,EAAe,2BACVD,GADS,IAEZD,IAAKnB,EAAE2B,OAAOzC,WAJb2C,aAAaC,QAAQ,UAQjC,wBAAQvD,KAAM,SAAUoC,UAAW,4BAAnC,sBAGM,cAAC,IAAD,CAAUuC,GAAI,MA7BtB,qCACE,0CACA,uBAAOtB,KAAM,WAAYoB,YAAa,WAAYrC,UAAW,8BAA+BsC,SAAU,SAACjD,GAAD,OAAO0B,EAAa1B,MAC1H,uBAAO4B,KAAM,WAAYrD,KAAM,WAAYyE,YAAa,WAAYrC,UAAW,8BAA+BsC,SAAU,SAACjD,GAAD,OAAO0B,EAAa1B,MAC5I,wBAAQzB,KAAM,SAAUoC,UAAW,4BAAnC,mBACA,cAAC,IAAD,CAAMuC,GAAI,YAAV,6C,QCrDJC,EAAclF,IAAMC,mBAExBC,GAEIiF,EAAc,SAAC/E,EAAkBC,GACnC,IAAM+E,EAAO/E,EAAOgF,QACpB,OAAQhF,EAAOC,MACX,IAAK,cACD,IAAMgF,EAAK,YAAOlF,EAAMkF,OAI1B,OAHEA,EAAMC,QAAO,SAACxD,GAAD,OAAYA,EAAEyD,UAAYJ,EAAKI,WAAS,GAAGC,SAAW,CAACL,GACpEE,EAAMC,QAAO,SAACxD,GAAD,OAAYA,EAAEyD,UAAYJ,EAAKI,WAAS,GAAGE,UAAYN,EAAKO,KACzEL,EAAMM,MAAK,SAACC,EAAGC,GAAJ,OAAkB,IAAIC,KAAKD,EAAEJ,UAAYI,EAAEJ,UAAY,IAAIM,UAAY,IAAID,KAAKF,EAAEH,UAAYG,EAAEH,UAAY,IAAIM,aACtH,2BAAI5F,GAAX,IAAkBkF,UAEpB,IAAK,cACD,OAAO,eAAIF,GAEf,QACE,MAAM,IAAIxE,MAAJ,iCAAoCP,EAAOC,SAIrDO,EAA0B,CAC5BmC,SAAU,GACViD,QAAS,GACTC,QAAS,GACTC,QAAS,GACTb,MAAO,GACPc,iBAAkB,cAEhBC,EAAe,SAAC,GAA6C,IAA5CtF,EAA2C,EAA3CA,SAA2C,EACpCf,IAAMgB,WAAWmE,EAAatE,GADM,mBAIxDI,EAAQ,CAACb,MAJ+C,KAIxCc,SAJwC,MAK9D,OAAO,cAACgE,EAAY/D,SAAb,CAAsBF,MAAOA,EAA7B,SAAqCF,KAE1CuF,EAAU,WACZ,IAAMjF,EAAUrB,IAAMsB,WAAW4D,GACjC,QAAgBhF,IAAZmB,EACF,MAAM,IAAIT,MAAM,gDAElB,OAAOS,GC7BIkF,G,MAfV,SAACC,GACJ,OAAKA,EAAMxD,SACPwD,EAAMN,QAAQO,SAAS,QAClB,mCACL,qBAAK/D,UAAW,kBAAhB,SACE,qBAAKgE,IAAKF,EAAMN,QAASS,IAAG,UAAKH,EAAMxD,SAAX,kBAAqCN,UAAW,6BAI3E,mCACL,qBAAKA,UAAW,kBAAmBd,MAAO,CAACgF,WAAYJ,EAAMN,SAA7D,SACE,sBAAMxD,UAAW,wBAAjB,SAA2C8D,EAAMxD,SAAS,GAAG6D,oBAVrC,+BCkBfC,G,MAnBO,SAACN,GAONpF,IACf,OAAQ,mCACN,sBAAKsB,UAAW,uBAAwBqE,QAAS,SAAChF,GAChDiF,QAAQC,IAAI,SACZT,EAAMU,WAFR,UAIE,cAAC,EAAD,CAAalE,SAAUwD,EAAMW,KAAKnE,SAAUkD,QAASM,EAAMW,KAAKjB,UAChE,sBAAMxD,UAAW,kCAAjB,SAAqD8D,EAAMW,KAAKnE,kB,wCChBzDoE,EAAY,SAAClE,GAGxB,MAAsB,sBAARA,EAAuBA,EAAMmE,uBAAanE,ICD7CoE,EAAiB,SAACC,EAAwBC,EAA0BtE,GAC/E,IAAMuE,EAAcL,EAAUG,GACxBG,EAAaN,EAAUlE,GACvByE,EAA+BN,uBAAaG,GAC5CI,EAAQD,EAA6BE,MAAM,EAAGC,MAAIC,aAClDpD,EAAUgD,EAA6BE,MACzCC,MAAIC,YACJP,EAAiBQ,QAEfC,EAAY/E,EACd4E,MAAII,KAAKvD,EAASiD,EAAOF,EAAYD,GACrCK,MAAII,KAAKC,MAAMxD,EAASiD,EAAOH,GAMnC,GAJKQ,IACHjB,QAAQoB,MAAM,qBACdpB,QAAQoB,MAAM,CAACZ,mBAAkBtE,MAAKqE,uBAEpCU,EAAW,CACb,IAAMI,EAAyBC,qBAAWL,GAC1C,OAAOhE,KAAKsE,MAAMF,GAEpB,MAAO,CACLG,KAAM,KC1BJC,EAAU,SAAC9C,GACf,IAAM+C,EAAQ,IAAI3C,KAClB,OAAOJ,EAAKgD,YAAcD,EAAMC,WAC5BhD,EAAKiD,aAAeF,EAAME,YAC1BjD,EAAKkD,gBAAkBH,EAAMG,eAU7BC,EAAa,SAACnD,GAClB,IAAMoD,EAAI,IAAIhD,KAAKJ,GACbqD,EAAK,IAAIC,KAAKC,mBAAmB,CAAC,MAAO,CAACtH,MAAO,WACjDuH,EAAM,IAAIpD,KACVqD,EAAOD,EAAInD,UAAY+C,EAAE/C,UAC/B,OAAIyC,EAAQM,GACNI,EAAIE,WAAaN,EAAEM,WAAa,EACG,IAAjCC,KAAKC,MAAMH,EAAO,IAAO,IACpBJ,EAAGQ,QAAQF,KAAKG,MAAML,EAAO,KAAQ,WAEvCJ,EAAGQ,QAAQF,KAAKG,MAAML,EAAO,IAAO,IAAK,WAE3CL,EAAEW,mBAAmB,GAAI,CAACC,KAAM,UAAWC,OAAO,YAnBzC,SAACjE,GACnB,IAAM+C,EAAQ,IAAI3C,KAClB,OAAOJ,EAAKgD,YAAcD,EAAMC,UAAY,GACxChD,EAAKiD,aAAeF,EAAME,YAC1BjD,EAAKkD,gBAAkBH,EAAMG,cAiB7BgB,CAAYd,GACR,YAGCA,EAAEe,mBAAmB,GAAI,CAACC,IAAK,UAAWC,MAAO,UAAWC,KAAM,aAIvEC,EAAa,SAACvE,GAClB,IAAMoD,EAAI,IAAIhD,KAAKJ,GACbwD,EAAM,IAAIpD,KAChB,OAAI0C,EAAQM,KACNI,EAAIE,WAAaN,EAAEM,WAAa,IAG9B,UAAN,OAAiBN,EAAEW,mBAAmB,GAAI,CAACC,KAAM,UAAWC,OAAO,aAEhE,UAAUd,EAAWC,GAArB,aAA4BA,EAAEW,mBAAmB,GAAI,CAACC,KAAM,UAAWC,OAAO,cCiBtEO,EArDiD,SAAC3D,GAAW,IACnE4D,EAAQ5D,EAAR4D,KADkE,EAEvCrH,oBAAS,GAF8B,mBAElEsH,EAFkE,KAEtDC,EAFsD,KA8BzE,OAAID,EACK,cAAC,IAAD,CAAUpF,GAAE,WAAMmF,EAAK5E,WAEzB,mCACL,sBAAK9C,UAAW,kBAAmBqE,QAAS,SAAChF,GAAD,OA/B1B,SAACA,GACnB,GAAKqI,EAAK5E,QAuBR8E,GAAY,OAvBK,CACjB,IAAMlG,EAAU,IAAImG,QAAQ,CAC1B,eAAgB,qBAElBnG,EAAQoG,OAAQ,gBAAhB,UAAoC5G,aAAaC,QAAQ,WACzDC,MAAMnB,EAAOC,WAAa,kBAAmB,CAC3CmB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnB+B,QAASmE,EAAKjD,KAAKlB,UAErB7B,YAECjC,MAAK,SAACkC,GAAD,OAASA,EAAIC,UAClBnC,MAAK,SAACkC,GACkB,MAAnBA,EAAIE,WACNG,MAAML,EAAIM,UAEVyF,EAAK5E,QAAUnB,EAAImB,QACnB8E,GAAY,QAY+BG,IAAnD,UACE,cAAC,EAAD,CAAazH,SAAUoH,EAAKjD,KAAKnE,SAAUkD,QAASkE,EAAKjD,KAAKjB,UAC9D,sBAAKxD,UAAW,QAAhB,UACE,sBAAKA,UAAW,wBAAhB,UACE,sBAAMA,UAAW,oCAAjB,SAAuD0H,EAAKjD,KAAKnE,WACjE,sBAAMN,UAAW,gCAAjB,SACG0H,EAAK3E,SAAS,IAAM2E,EAAK1E,UAAYwE,EAAWE,EAAK1E,WAAawE,EAAWE,EAAK1E,WAAa,cAAC,IAAD,CAASgF,SAAUN,EAAK1E,UAAWiF,KAAM,CAACC,YAAa,KAAQ,QAGnK,qBAAKlI,UAAW,2BAAhB,SACE,sBAAMA,UAAW,sCAAjB,SACE0H,EAAK3E,SAAS,GAAK6B,EAAe1D,aAAaC,QAAQ,OAAOuG,EAAK3E,SAAS,GAAGoF,QAAST,EAAKjD,KAAKhB,SAASqC,KAAO,gB,QCvCxHsC,G,MAAgB9K,IAAMC,mBAE1BC,IAEI6K,EAAgB,SAAC3K,EAAqBC,GACxC,OAAQA,EAAOC,MACX,IAAK,gBACD,MAA4B,UAAxBD,EAAOgF,QAAQ/E,MACe,KAA1BD,EAAOgF,QAAQE,OACR,2BACAnF,GADP,gBAEIkF,MAAO,IACNjF,EAAOgF,QAAQ/E,KAAOD,EAAOgF,QAAQE,SAE3C,2BACInF,GADX,kBAESC,EAAOgF,QAAQ/E,KAAOD,EAAOgF,QAAQE,SAElD,IAAK,eACD,OAAO,2BACAnF,GADP,IAEIkF,MAAOjF,EAAOgF,QAAQC,QAE9B,QACE,MAAM,IAAI1E,MAAJ,iCAAoCP,MAI9CQ,EAA6B,CAC/BmK,MAAO,GACPvF,SAAU,GACVH,MAAO,IAEL2F,EAAiB,SAAC,GAA6C,IAA5ClK,EAA2C,EAA3CA,SAA2C,EACtCf,IAAMgB,WAAW+J,EAAelK,GADM,mBAI1DI,EAAQ,CAACb,MAJiD,KAI1Cc,SAJ0C,MAKhE,OAAO,cAAC4J,EAAc3J,SAAf,CAAwBF,MAAOA,EAA/B,SAAuCF,KAE5CmK,EAAY,WACd,IAAM7J,EAAUrB,IAAMsB,WAAWwJ,GACjC,QAAgB5K,IAAZmB,EACF,MAAM,IAAIT,MAAM,gDAElB,OAAOS,GC7BI8J,EAzBE,WAAO,IACf/K,EAASkG,IAATlG,MACDgL,EAASF,IACTG,EAAyE,GAkB/E,OAjBID,EAAOhL,MAAMkF,OACf8F,EAAOhL,MAAMkF,MAAMgG,SAAQ,SAAAnE,GACzBkE,EAAUE,KAAK,cAAC,EAAD,CAAUnB,KAAM,CAC7B5E,QAAS,GACT2B,OACA1B,SAAU,KACJ+F,YAAO,QAEnBpL,EAAMkF,MAAMgG,SAAQ,SAAAlB,GACdgB,EAAOhL,MAAM4K,MACTZ,EAAKjD,KAAKnE,SAASyI,cAAchF,SAAS2E,EAAOhL,MAAM4K,MAAMS,gBAC/DJ,EAAUE,KAAK,cAAC,EAAD,CAAUnB,KAAMA,GAAWoB,YAAO,KAIrDH,EAAUE,KAAK,cAAC,EAAD,CAAUnB,KAAMA,GAAWoB,YAAO,QAE9C,mCACL,qBAAK9I,UAAW,YAAhB,SAA8B2I,OC2CnBK,G,MAjEO,SAAClF,GAIrB,IAAM4E,EAASF,IACTS,EAAQC,iBAAyB,MA0CvC,OAAQ,mCACN,qBAAKlJ,UAAW,uBAAhB,SACE,sBAAKA,UAAW,6BAA8BqE,QAAS,SAAChF,GACjDyE,EAAMqF,WACTrF,EAAMsF,WAAU,GACM,OAAlBH,EAAMI,SACRC,YAAW,WAA6B,OAAlBL,EAAMI,SAAkBJ,EAAMI,QAAQE,UAAU,OAJ5E,UAQE,sBAAMvJ,UAAU,0BAAhB,oBAGA,uBAAOpC,KAAM,OAAQoC,UAAW,mCAAoCqC,YAAa,eAAgBmH,IAAKP,EAAO3G,SAAU,SAACjD,GAAD,OAtDxG,SAACA,GAKpB,GAJAqJ,EAAOlK,SAAS,CAACZ,KAAM,gBAAiB+E,QAAS,CAC/C/E,KAAM,QACNiF,OAAQxD,EAAE2B,OAAOzC,SAEfc,EAAE2B,OAAOzC,MAAM+G,OAAS,EAC1BoD,EAAOlK,SAAS,CAACZ,KAAM,eAAgB+E,QAAS,CAC9CC,MAAO,WAIX,GAAI1B,aAAaC,QAAQ,SAAU,CACjC,IAAMO,EAAU,IAAImG,QAAQ,CAC1B,eAAgB,qBAElBnG,EAAQoG,OAAQ,gBAAhB,UAAoC5G,aAAaC,QAAQ,WACzDC,MAAMnB,EAAOC,WAAa,mBAAoB,CAC5CmB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBiI,MAAOpK,EAAE2B,OAAOzC,QAElBmD,YAEDjC,MAAK,SAACkC,GAAD,OAASA,EAAIC,UAClBnC,MAAK,SAACkC,GAKkB,MAAnBA,EAAIE,WACNG,MAAML,EAAIM,SAENN,EAAIe,MACNgG,EAAOlK,SAAS,CACdZ,KAAM,eACN+E,QAAS,CAACC,MAAOjB,EAAIe,KAAK4F,aAmB8FoB,CAAarK,eCnCpIsK,EAtBC,SAAC7F,GACV,IACEpG,EAASkG,IAATlG,MACDkM,EAASlL,IAFX,EAGwB2B,mBAASuJ,EAAOlM,MAAMM,MAAQ,KAHtD,mBAGGmL,EAHH,KAGa3E,EAHb,KAQJ,OAJA1F,qBAAU,WACR0F,EAAQoF,EAAOlM,MAAMM,MAAQ,OAC5B,CAAC4L,EAAOlM,QAEJ,mCACP,cAAC,EAAD,UACE,sBAAKsC,UAAS,uBAAkBmJ,EAAW,SAAW,UAAtD,UACE,cAAC,EAAD,CAAe1E,KAAM,CAACnE,SAAU5C,EAAM4C,SAAUkD,QAAS9F,EAAM8F,SAAUgB,QAAS,WAChFF,QAAQC,KAAK4E,GACb3E,GAAS2E,MAEX,cAAC,EAAD,CAAeA,SAAUA,EAAUC,UAAW,SAACS,GAAD,OAAgBrF,EAAQqF,MACtE,cAAC,EAAD,YCoESC,G,MAhFV,SAAChG,GACJ,IAAIqE,EAAiB4B,mBAAQ,WAC3B,IACE,OAAOnF,EAAe1D,aAAaC,QAAQ,OAAQ2C,EAAMqE,QAASrE,EAAML,SAASqC,KACjF,MAAOJ,GAEP,OADApB,QAAQC,IAAI,CAACmB,QAAO5B,UACb,MAER,CAACA,IARU,EASYzD,mBAASyD,EAAMkG,QAT3B,mBASPA,EATO,KASCC,EATD,KAURC,EAAahB,iBAAuB,MACpCiB,EAAejB,kBAAO,GACtBkB,EAAuBC,cACvBC,EAAiB,WAAO,IAAD,EAC3B,KAAIN,GAAUlG,EAAMyG,QAAUJ,EAAad,SAA3C,CACA,IAAMmB,EAAI,UAAGN,EAAWb,eAAd,aAAG,EAAoBoB,wBAC7BD,GACEA,EAAKE,IAAM,IACbpG,QAAQC,IAAIT,EAAM6G,IAChB7G,EAAM8G,OAAOC,KAAKtJ,KAAKC,UAAU,CAC/B7D,OAAQ,eACRmN,OAAQV,EAAOO,GACfI,UAAWjH,EAAM6G,GACjBlJ,MAAOP,aAAaC,QAAQ,YAE9BgJ,EAAad,SAAU,EACvB/E,QAAQC,IAAI4D,GACZ8B,GAAQ,MAuBhB,OAnBAnL,qBAAU,WACR,IAAKkL,IAAWlG,EAAMyG,OAElB,OADUzG,EAAMkH,kBAAkBV,EAC3BnH,IAEN6G,GAAUlG,EAAMyG,QACnBzG,EAAM8G,OAAOxL,iBAAiB,WAAW,SAAC6L,GACxC,IAAMC,EAAW3J,KAAKsE,MAAMoF,EAAGvI,MACP,yBAApBwI,EAASvN,QACPuN,EAASxI,KAAKI,UAAYsH,EAAOO,IAAMO,EAASxI,KAAKyI,aAAerH,EAAM6G,IAC5EV,GAAQ,QAKf,CAACD,IACJlL,qBAAU,WACRwL,MACC,IACI,mCACL,sBAAKtK,UAAS,wCAAmC8D,EAAMyG,OAAS,SAAW,QAAUf,IAAKU,EAA1F,UACE,sBAAKlK,UAAS,4CAAuC8D,EAAMyG,OAAS,SAAW,QAA/E,UACE,qBAAKvK,UAAS,mDAA8C8D,EAAMyG,OAAS,SAAW,QAAtF,SACE,+BAAOpC,MAET,qBAAKnI,UAAS,4CAAd,SACE,sBAAMA,UAAU,iBAAhB,0BAKA8D,EAAMyG,OAAU,qBAAKvK,UAAS,2CAAd,SAChB,sBAAMA,UAAU,iBAAhB,SACGgK,EAAS,WAAY,WAEhB,MAIZ,qBAAKhK,UAAS,+CAA0C8D,EAAMyG,OAAS,SAAW,QAAlF,SACC/C,EAAW1D,EAAMb,MAAQuE,EAAW1D,EAAMb,MAAO,cAAC,IAAD,CAChD+E,SAAUlE,EAAMb,KAChBgF,KAAM,CAACC,YAAa,eC/DtBkD,G,MAAgB9N,IAAMC,mBAE1BC,IACI6N,EAAgB,SAAC3N,EAAoBC,GACvC,IAAM+E,EAAO/E,EAAOgF,QAEpB,OADA2B,QAAQC,IAAI5G,GACJA,EAAOC,MACX,IAAK,cAAgB,IAAD,EAEhB,OADA,EAAAF,EAAMqF,UAAS8F,KAAf,oBAAuBnG,IAChB,eAAIhF,GAEf,IAAK,oBAED,OADAA,EAAMqF,SAAN,sBAAqBL,GAArB,YAA8BhF,EAAMqF,WAC7B,eAAIrF,GAEf,IAAK,gBACD,MAAO,CACH4C,SAAU,GACViD,QAAS,GACTC,QAAS,GACTC,QAAS,GACTV,SAAU,IAGlB,IAAK,aAED,OADArF,EAAM+F,QAAU9F,EAAOgF,QAChBjF,EAEX,IAAK,0BAID,OAHYA,EAAMqF,SAASF,QAAO,SAAAyI,GAAC,OAAIA,EAAEH,aAAezI,EAAKiI,MAAI,GAC7DY,MAAO,EACXjH,QAAQC,IAAI7G,GACLA,EAEX,IAAK,kBACD,OAAO,2BAAIA,GAAUgF,GAEzB,QACE,MAAM,IAAIxE,MAAJ,iCAAoCP,EAAOC,SAIrDO,EAA4B,CAC9BmC,SAAU,GACViD,QAAS,GACTC,QAAS,GACTC,QAAS,GACTV,SAAU,IAERyI,GAAiB,SAAC,GAA6C,IAA5CnN,EAA2C,EAA3CA,SAA2C,EACtCf,IAAMgB,WAAW+M,EAAelN,GADM,mBAE1DI,EAAQ,CAACb,MAFiD,KAE1Cc,SAF0C,MAGhE,OAAO,cAAC4M,EAAc3M,SAAf,CAAwBF,MAAOA,EAA/B,SAAuCF,KAE5CoN,GAAY,WACd,IAAM9M,EAAUrB,IAAMsB,WAAWwM,GACjC,QAAgB5N,IAAZmB,EACF,MAAM,IAAIT,MAAM,gDAElB,OAAOS,GCpCI+M,GAxCV,SAAC5H,GAAW,IAAD,EACgBzD,mBAAS,IADzB,mBACP4B,EADO,KACE0J,EADF,KAEPjO,EAAS+N,KAAT/N,MAIDkO,EAAW1C,iBAAyB,MACpC2C,EAAa,SAACxM,GAClBA,EAAE0C,iBACF,IAAM+J,ECXoB,SAACjH,EAAwBjD,EAAWpB,GAChE,IAAMuE,EAAcL,EAAUG,GACxBG,EAAaN,EAAUlE,GACvB0E,EAAQ6G,IAAKC,YAAY5G,MAAIC,aAC7B4G,EAAeC,qBAAW3K,KAAKC,UAAUI,IACzCuK,EAAYnH,EACdI,cAAI6G,EAAc/G,EAAOF,EAAYD,GACrCK,MAAIK,MAAMwG,EAAc/G,EAAOH,GAE7BqH,EAAc,IAAIC,WAAWnH,EAAMI,OAAS6G,EAAU7G,QAG5D,OAFA8G,EAAYE,IAAIpH,GAChBkH,EAAYE,IAAIH,EAAWjH,EAAMI,QAC1BiH,uBAAaH,GDDNI,CACVtL,aAAaC,QAAQ,OACrB,CACE2E,KAAM7D,GAERvE,EAAM+F,SAERK,EAAM8G,OAAOC,KAAKtJ,KAAKC,UACrB,CACE7D,OAAQ,eACRmN,OAAQhH,EAAMhB,QACdqF,QAAS2D,EACTrK,MAAOP,aAAaC,QAAQ,YAG5ByK,EAASvC,UACXuC,EAASvC,QAAQ9K,MAAQ,IACzBoN,EAAW,KAEf,OAAO,mCACL,qBAAK3L,UAAW,qBAAhB,SACI,qBAAKA,UAAW,0BAAhB,SACI,uBAAMrC,OAAO,GAAGmE,SAAU,SAACzC,GAAD,OAAOwM,EAAWxM,IAA5C,UACI,uBAAOzB,KAAM,OAAQyE,YAAa,qBAAsBoK,QAAS,SAACpN,GAAD,OA7B3D,SAACA,GACnBsM,EAAWtM,EAAE2B,OAAOzC,OA4BgEmO,CAAYrN,IAAImK,IAAKoC,IAC7F,wBAAQhO,KAAM,SAAUoC,UAAW,iBAAnC,4BE/BD2M,GAPV,SAAC7I,GACJ,OAAO,mCACL,qBAAK9D,UAAW,2BCgIL4M,GAzH8C,SAAC9I,GAAW,IAAD,EACtCzD,oBAAS,GAD6B,mBAC/DQ,EAD+D,KACpDC,EADoD,KAEhEsJ,EAAuBC,cACvBwC,EAAO3D,iBAAO,GACd4D,EAAmB5D,iBAAO,GAJsC,EAKlC7I,oBAAS,GALyB,mBAK/D0M,EAL+D,KAKlDC,EALkD,KAMhEC,EAASxB,KANuD,GAOzD7H,IACSvD,mBAA6B,KARmB,mBAQ/DyL,EAR+D,KAQ1DoB,EAR0D,KAShEC,EAAcjE,iBAAuB,MACrCkE,EAAYlE,iBAAwB,IAyBpCmE,EAAWC,uBAAY,SAACrC,GAC5B,IAAMC,EAAW3J,KAAKsE,MAAMoF,EAAGvI,MACP,iBAApBwI,EAASvN,SACU,IAAjBkP,EAAKxD,SACP4D,EAAOzO,SAAS,CAACZ,KAAM,kBACvBwP,EAAU/D,QAAU,GACpB4D,EAAOzO,SAAS,CAACZ,KAAM,aAAc+E,QAASuI,EAASzH,UACvDwJ,EAAOzO,SAAS,CAACZ,KAAM,cAAe+E,QAASuI,EAASnI,YAGpDmI,EAASnI,SAAS,KACpBkK,EAAOzO,SAAS,CAACZ,KAAM,oBAAqB+E,QAASuI,EAASnI,WAC9DiK,GAAa,IAGjBlM,GAAW,IAEW,gBAApBoK,EAASvN,QACPuN,EAASxI,KAAKT,QAAQa,UAAYsH,EAAOO,KAC3CrG,QAAQC,IAAI2G,EAASxI,KAAKT,QAAQa,QAASsH,EAAOO,IAClDsC,EAAOzO,SAAS,CAACZ,KAAM,cAAe+E,QAAS,CAAC,CAC9CwF,QAAS+C,EAASxI,KAAKT,QAAQkG,QAC/B1E,QAASwJ,EAAOvP,MAAM+F,QACtBR,KAAMiI,EAASxI,KAAKT,QAAQgB,KAC5BsH,OAAQW,EAASxI,KAAKT,QAAQsL,KAC9BhC,KAAML,EAASxI,KAAKT,QAAQsJ,KAC5BJ,WAAYD,EAASxI,KAAKT,QAAQkJ,gBAIhB,yBAApBD,EAASvN,QACPuN,EAASxI,KAAKI,UAAYsH,EAAOO,IACnCsC,EAAOzO,SAAS,CAACZ,KAAM,0BAA2B+E,QAAS,CACzDgI,GAAIO,EAASxI,KAAKyI,gBAGvB,CAAC8B,EAAOvP,MAAM6F,UAsCjB,OArCAzE,qBAAU,WACR,IAAM0O,EAA8B,GACpCP,EAAOvP,MAAMqF,SAAS6F,SAAQ,SAAC6E,GAO7B,OAAOD,EAAQ3E,KAAK,cAAC,EAAD,CAAS+B,OAAQ9G,EAAM8G,OAAQD,GAAI8C,EAAEtC,WAAYH,kBAAmB,SAAC0C,GAAD,OAtEnE,SAACL,GAExB,OADAD,EAAU/D,QAAQR,KAAKwE,GAChB,kBAAMD,EAAU/D,QAAQxG,QAAO,SAAAyI,GAAC,OAAIA,IAAM+B,MAoE0DM,CAAiBD,IAAI1D,OAAQyD,EAAElC,KAAMpD,QAASsF,EAAEtF,QAAS1E,QAASwJ,EAAOvP,MAAM+F,QAAyB8G,OAAQkD,EAAElD,OAAQtH,KAAMwK,EAAExK,MAArC6F,YAAO,QAE/MoE,EAAOM,KACP,CAACP,EAAOvP,QACVoB,qBAAU,WACJqO,EAAY9D,UAAY8D,EAAY9D,QAAQuE,UAAY,KAAyB,IAAjBf,EAAKxD,SACvE8D,EAAY9D,QAAQwE,SAAS,EAAEV,EAAY9D,QAAU8D,EAAY9D,QAAQyE,aAAe,GACjFX,EAAY9D,SACnB8D,EAAY9D,QAAQwE,SAAS,EAAEV,EAAY9D,QAAU8D,EAAY9D,QAAQyE,aAAehB,EAAiBzD,QAAU,KACpH,CAACyC,IACJhN,qBAAU,WAaR,OAZAgF,EAAM8G,OAAOxL,iBAAiB,UAAWiO,GACzCJ,EAAOzO,SAAS,CAACZ,KAAM,kBACvBiP,EAAKxD,QAAU,EACfvI,GAAW,GACXgD,EAAM8G,OAAOC,KACXtJ,KAAKC,UAAU,CACb7D,OAAQ,eACRmF,QAASsH,EAAOO,GAChBoD,GAAI,EACJC,IAAK9M,aAAaC,QAAQ,YAGvB,WAEL2C,EAAM8G,OAAOqD,oBAAoB,UAAWZ,MAE7C,CAACA,EAAUjD,EAAOO,GAAI7G,EAAM8G,SAC1BR,EAAOO,GAGR9J,EAAkB,qBAAKb,UAAW,YAAhB,SAA6B,cAAC,EAAD,MAC5C,mCACL,sBAAKA,UAAW,cAAhB,UACE,cAAC,GAAD,CAAc4K,OAAQ9G,EAAM8G,SAC5B,qBAAK5K,UAAW,wBAAyBkO,SAAU,SAAC7O,GAAD,OArGhC,SAACA,GACtB+N,EAAU/D,QAAQT,SAAQ,SAAAyE,GACxBA,EAAShO,MAEgB,IAAvBA,EAAE2B,OAAO4M,YACNb,IACHF,EAAKxD,QAAUwD,EAAKxD,QAAU,EAC9ByD,EAAiBzD,QAAU8D,EAAY9D,QAAS8D,EAAY9D,QAAQyE,aAAe,EACnFd,GAAa,GACblJ,EAAM8G,OAAOC,KACXtJ,KAAKC,UAAU,CACb7D,OAAQ,eACRmF,QAASsH,EAAOO,GAChBoD,GAAIlB,EAAKxD,QACT2E,IAAK9M,aAAaC,QAAQ,cAuF0BmJ,CAAejL,IAAImK,IAAK2D,EAAlF,SAAgGrB,IAChG,cAAC,GAAD,CAAclB,OAAQ9G,EAAM8G,OAAQ9H,QAASsH,EAAOO,UAP/C,yBCpCIwD,GA3EF,WACX,IAAM/D,EAAuBC,cACvBO,EAAS1B,iBAAO,IAAIkF,UAAUnO,EAAOE,aACrCsB,EAAQP,aAAaC,QAAQ,SAC5B3C,EAAYoF,IAAZpF,SAJU,EAKe6B,oBAAS,GALxB,mBAKVQ,EALU,KAKCC,EALD,KAQXuN,EAAkB,SAACC,GACvB,IAAMpD,EAAW3J,KAAKsE,MAAMyI,EAAM5L,MAElC,GADA4B,QAAQiK,IAAIrD,GACPA,EAASxI,OAGgB,0BAA1BwI,EAASxI,KAAKT,SAChBqC,QAAQkK,KAAR,iCAEsB,gBAApBtD,EAASvN,QAA0B,CACrC,IAAMsE,EAAUiJ,EAASxI,KAAKT,QAC9BzD,EAAS,CAACZ,KAAM,cAAe+E,QAASV,MAuC5C,OAPAnD,qBAAU,WAIR,OAhCA8L,EAAOvB,QAAQoF,OAAS,WACtB7D,EAAOvB,QAAQwB,KACXtJ,KAAKC,UAAU,CAAC7D,OAAQ,WAAYqQ,IAAKvM,MAG/CmJ,EAAOvB,QAAQjK,iBAAiB,UAAWiP,GAG3CjN,MAAMnB,EAAOC,WAAa,oBAAqB,CAC7CmB,OAAQ,OACRqN,KAAM,OACNpN,KAAMC,KAAKC,UAAU,IACrBE,QAAS,CACP,cAAiBD,GAAgB,GACjC,eAAgB,sBAGfhC,MAAK,SAACkC,GAAD,OAASA,EAAIC,UAClBnC,MAAK,SAACkC,GACL,GAAuB,MAAnBA,EAAIE,WACNyC,QAAQoB,MAAM/D,OACT,CACL,IAAMgN,EAAMhN,EAAIuJ,SAChB1M,EAAS,CAACZ,KAAM,cAAe+E,QAAQ,eAAKgM,KAC5C7N,GAAW,OAQZ,kBAAM8J,EAAOvB,QAAQ4E,oBAAoB,UAAWI,MAE1D,SACe7Q,IAAd4M,EAAOO,IACTrG,QAAQC,IAAI,WACL,qBAAKvE,UAAW,OAAhB,SACP,cAAC,EAAD,OAGEa,EACK,cAAC,EAAD,IAGF,sBAAKb,UAAW,OAAhB,UACH,cAAC,EAAD,IACA,cAAC,GAAD,UACE,cAAC,GAAD,CAAQ4K,OAAQA,EAAOvB,gBCvChBuF,GAnCuB,WAAO,IAAD,EACRvO,mBAAS,GADD,mBACnCwO,EADmC,KACvBC,EADuB,KAEpCrN,EAAQP,aAAaC,QAAQ,SAkBjC,OAfFrC,qBAAU,WACJoC,aAAaC,QAAQ,SACvBC,MAAMnB,EAAOC,WAAY,gBAAiB,CACxCmB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACC,UACtBC,QAAS,CACP,eAAgB,sBAGfjC,MAAK,SAACkC,GAAD,OAASA,EAAIC,UAClBnC,MAAK,SAACkC,GAAD,OAASmN,EAA+B,MAAnBnN,EAAIE,WAAqB,EAAI,MAE5DiN,EAAY,KAEb,CAACrN,IACiB,IAAfoN,EACG,cAAC,EAAD,IAGU,IAAfA,EACK,cAAC,IAAD,CAAUtM,GAAI,WAIf,cAAC,EAAD,UACN,cAAC,GAAD,OCwHWwM,I,MAtJ2B,WAAO,IAAD,EACvB1O,mBhBCM,WAAO,IAAD,EACJ+E,MAAI4J,UAA5BC,EAD4B,EAC5BA,UAAWC,EADiB,EACjBA,UAClB,MAAO,CACLlK,WAAYuH,uBAAa0C,GACzBlK,YAAawH,uBAAa2C,IgBLIC,IADc,mBACvC3O,EADuC,aAERH,mBAAS,CAC7CC,SAAU,GACVC,SAAU,MAJkC,mBAEvCE,EAFuC,KAE1BC,EAF0B,OAMXL,oBAAS,GANE,mBAMvC+O,EANuC,KAMzBC,EANyB,OAOpBhP,mBAAS,GAPW,mBAOvCM,EAPuC,KAOhCC,EAPgC,OAQpBP,oBAAS,GARW,mBAQvCiP,EARuC,KAQ/BC,EAR+B,OASdlP,oBAAS,GATK,mBASvCQ,EATuC,KAS5BC,EAT4B,KAUxCC,EAAe,SAAC1B,GAEpB,GADAiF,QAAQC,IAAIlF,EAAE2B,OAAOC,KAAM5B,EAAE2B,OAAOzC,OACd,oBAAlBc,EAAE2B,OAAOC,KACL5B,EAAE2B,OAAOzC,QAAUkC,EAAYF,SACjCgP,GAAQ,GAGRA,GAAQ,QAQV,GAJA7O,EAAe,2BACRD,GADO,kBAETpB,EAAE2B,OAAOC,KAAO5B,EAAE2B,OAAOzC,SAER,aAAlBc,EAAE2B,OAAOC,KAAqB,CAE5B5B,EAAE2B,OAAOzC,MAAMiR,MADD,qEAEhBH,GAAW,GAGXA,GAAW,KAsDfI,EAAWvG,iBAAO,MA6CxB,OArBApK,qBAAU,WACJoC,aAAaC,QAAQ,SACvBC,MAAMnB,EAAOC,WAAa,gBAAiB,CACzCmB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACC,MAAOP,aAAaC,QAAQ,WAClDO,QAAS,CACP,eAAgB,sBAGfjC,MAAK,SAACkC,GAAD,OAASA,EAAIC,UAClBnC,MAAK,SAACkC,GACkB,MAAnBA,EAAIE,aACNf,GAAW,GACXF,EAAS,OAKjBE,GAAW,KAEZ,IACCD,EAAkB,cAAC,EAAD,IACf,mCACL,sBAAKb,UAAU,gBAAf,UACE,sBAAKA,UAAW,wBAAhB,UACI,oBAAIA,UAAW,gCAAf,iCACA,oBAAIA,UAAW,qCAAf,yEAEJ,qBAAKA,UAAW,uBAAhB,SACE,sBAAMA,UAAW,sBAAuB8B,SAAU,SAACzC,GACjDA,EAAE0C,iBAvGa,SAACtB,EAIrBE,EAAeC,GACXH,EAAYF,UAAaE,EAAYH,UACrCgP,IAEA7O,EAAYF,SAASiP,MADR,qEAKJ,IAAV7O,EACAS,MAAMnB,EAAOC,WAAa,eAAgB,CAC1CmB,OAAQ,OACRC,KAAMC,KAAKC,UAAL,2BAAmBf,GAAnB,IAAgCgD,QAASjD,EAAIwE,cACnDtD,QAAS,CACL,eAAgB,sBAGfjC,MAAK,SAACkC,GAAD,OAASA,EAAIC,UAClBnC,MAAK,SAACkC,GACgB,MAAnBA,EAAIE,WACJG,MAAML,EAAIM,UAEVf,aAAagB,QAAQ,QAASP,EAAIF,OAClCb,EAAS,OAKQ,MAAnBJ,EAAIuE,cACJ7D,aAAagB,QAAQ,MAAO1B,EAAIuE,aAC5B7D,aAAaC,QAAQ,QAAQP,EAAS,KAuE9C8O,CAAejP,EAAaE,EAAOC,IAFrC,SAIGD,GAvDPO,aAAagB,QAAQ,MAAO1B,EAAIuE,aAClB,IAAVpE,EACA,qCACE,gDACA,sEACA,sBAAKX,UAAW,oCAAhB,UACA,uBAA6BiB,KAAM,MAAOrD,KAAM,OAAQ+R,aAAcnP,EAAIuE,YAAa/E,UAAW,oCAAqCwJ,IAAKiG,GAAhIjP,EAAIuE,aAChB,sBAAM/E,UAAU,qDAAqDqE,QAAS,SAAChF,GACzEoQ,EAASpG,SAEXoG,EAASpG,QAAQuG,SAEnB5Q,SAAS6Q,YAAY,SALvB,6BAUA,wBAAQjS,KAAM,SAAUoC,UAAW,+BAAnC,+BAGM,cAAC,IAAD,CAAUuC,GAAI,OAhCtB,qCACE,0CACA,uBAAOtB,KAAM,WAAYoB,YAAa,WAAYrC,UAAW,iCAAkCsC,SAAU,SAACjD,GAAD,OAAO0B,EAAa1B,MAC7H,uBAAO4B,KAAM,WAAYrD,KAAM,WAAYyE,YAAa,WAAYrC,UAAS,yCAAoCoP,EAAe,GAAK,eAAiB9M,SAAU,SAACjD,GAAD,OAAO0B,EAAa1B,MACpL,uBAAO4B,KAAM,kBAAmBrD,KAAM,WAAYyE,YAAa,kBAAmBrC,UAAS,yCAAoCsP,EAAS,GAAK,eAAiBhN,SAAU,SAACjD,GAAD,OAAO0B,EAAa1B,MAC5L,wBAAQzB,KAAM,SAAUoC,UAAW,+BAAgC8P,UAAWR,EAA9E,4BACA,cAAC,IAAD,CAAM/M,GAAI,SAAV,yCC3EVwN,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWhQ,IACtC,cAAC,IAAD,CAAO8P,OAAK,EAACC,KAAK,YAAYC,UAAWrB,KACzC,cAAC,IAAD,CAAOoB,KAAM,CAAC,OAAQ,KAAMD,OAAK,EAACE,UAAWxB,cAKrD5P,SAASqR,eAAe,SAM1B/Q,M","file":"static/js/main.cd98e813.chunk.js","sourcesContent":["import React from 'react'\n\ntype Action = {type: 'CHANGE'}\ntype Dispatch = (action: Action) => void\n\nconst ScreenContext = React.createContext<\n{state: {\n    width: number,\n    height: number\n}; dispatch: Dispatch;} | undefined\n>(undefined)\n\nconst screenReducer = (state: {\n    width: number,\n    height: number\n}, action: Action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                height: window.innerHeight,\n                width: window.innerWidth\n            }\n        default: {\n          throw new Error(`Unhandled action type: ${action}`)\n        }\n      }\n}\nconst initialState: {\n    width: number,\n    height: number\n} = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\nconst ScreenProvider = ({children}: {children: React.ReactNode}) => {\n    const [state, dispatch] = React.useReducer(screenReducer, initialState)\n    // NOTE: you *might* need to memoize this value\n    // Learn more in http://kcd.im/optimize-context\n    const value = {state, dispatch, }\n    return <ScreenContext.Provider value={value}>{children}</ScreenContext.Provider>\n}\nconst useScreen = () => {\n    const context = React.useContext(ScreenContext)\n    if (context === undefined) {\n      throw new Error('useCount must be used within a CountProvider')\n    }\n    return context\n  }\n  \nexport {ScreenContext, ScreenProvider, useScreen}","import React, { useEffect } from 'react';\nimport './App.css';\nimport { useScreen } from './Contexts/ScreenContext';\n\nconst App: React.FunctionComponent = ({children}) => {\n  const {dispatch} = useScreen()\n  useEffect(() => {\n    let vh = window.innerHeight * 0.01\n    document.documentElement.style.setProperty('--vh', `${vh}px`)\n    window.addEventListener('resize', (e) => {\n      dispatch({type: 'CHANGE'})\n      let vh = window.innerHeight * 0.01\n      document.documentElement.style.setProperty('--vh', `${vh}px`)\n    })\n  }, [])\n  return <>\n    {children}\n  </>\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport './Preloader.css'\nconst Preloader: React.FunctionComponent = () => {\n  return <div className=\"lds-roller\">\n    <div/>\n    <div/>\n    <div/>\n    <div/>\n    <div/>\n    <div/>\n    <div/>\n    <div/>\n  </div>\n}\nexport default Preloader\n","const config = {\n  server_url: 'https://chat.ciphen.net/',\n  socket_url: 'wss://chat.ciphen.net/'\n}\nexport default config\n","import React, {useEffect, useState} from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport './Login.scss';\nimport Preloader from \"../../Components/Preloader/Preloader\";\nimport config from '../../config'\nimport { nanoid } from \"nanoid\";\n\nconst handleLogin = (credentials: {\n  username?: string,\n  password?: string,\n  key?:string\n}, stage: number, setStage: any) => {\n  if (stage === 0) {\n  fetch(config.server_url + 'api/login', {\n    method: 'POST',\n    body: JSON.stringify(credentials),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.statusCode !== 200) {\n          alert(res.message)\n        } else {\n          localStorage.setItem('token', res.token)\n          setStage(1)\n        }\n      })\n  }\n  else {\n    if (credentials.key != null) {\n      localStorage.setItem('key', credentials.key)\n      if (localStorage.getItem('key')) setStage(2)\n    }\n  }\n}\n\nconst Login: React.FunctionComponent = () => {\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: '',\n    key: ''\n  })\n  const [stage, setStage] = useState(0)\n  const [isLoading, setLoading] = useState(true)\n  const handleChange = (e: any) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    })\n  }\n  const firstStage = () => {\n    return (\n        <>\n          <h1>Cryptash</h1>\n          <input name={'username'} placeholder={'Username'} className={'login_main__form___username'} onChange={(e) => handleChange(e)}/>\n          <input name={'password'} type={'password'} placeholder={'Password'} className={'login_main__form___password'} onChange={(e) => handleChange(e)}/>\n          <button type={'submit'} className={'login_main__form___submit'}>Login</button>\n          <Link to={'/register'}>Create new account</Link>\n        </>\n  )\n  }\n  const secondStage = () => {\n    if (stage === 1) return (\n        <>\n          <h3>One more thing</h3>\n          <h4>Please enter your private key</h4>\n          <input type={'text'}\n                 className={'login_main__form___privatekey'}\n                 autoComplete={'off'}\n                 placeholder={'Private key'}\n                 key={localStorage.getItem('token')}\n                 onChange={(e:any) => {\n                   setCredentials({\n                     ...credentials,\n                     key: e.target.value,\n                  })}\n                 }\n          />\n          <button type={'submit'} className={'login_main__form___submit'}>Login</button>\n        </>\n    )\n    else return <Redirect to={'/'} />\n  }\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      fetch(config.server_url + 'api/checkAuth', {\n        method: 'POST',\n        body: JSON.stringify({token: localStorage.getItem('token')}),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n          .then((res) => res.json())\n          .then((res) => {\n            if (res.statusCode === 200) {\n              setLoading(false)\n              setStage(2)\n            }\n\n          })\n    }\n    else {\n      setLoading(false)\n    }\n  }, [])\n  if (isLoading) return <Preloader />\n  return <>\n    <div className=\"login_main\">\n      <div className={'login_main__header'}>\n          <h1 className={'login_main__header___title'}>Sign in into your account</h1>\n          <h2 className={'login_main__header___undertitle'}>If you don't have account, sign up using button below</h2>\n      </div>\n      <div className={'login_main__block'}>\n        <form className={'login_main__form'} onSubmit={(e) =>{\n          e.preventDefault()\n          handleLogin(credentials, stage, setStage)\n        }}>\n          {stage ? secondStage() : firstStage()}\n        </form>\n      </div>\n    </div>\n  </>\n\n}\n\nexport default Login\n","import React from 'react'\nimport { UserState } from '../Typings/UserState'\n\ntype Action = {type: 'ADD_MESSAGE', payload: any} | {type: 'CHANGE_USER', payload: any} | {type: 'REMOVE_MESSAGE', payload: any} | {type: 'EDIT_MESSAGE', payload: any} | {type: 'ADD_CHAT', payload: any}\ntype Dispatch = (action: Action) => void\n\nconst UserContext = React.createContext<\n{state: UserState; dispatch: Dispatch;} | undefined\n>(undefined)\n\nconst userReducer = (state: UserState, action: Action) => {\n    const data = action.payload\n    switch (action.type) {\n        case 'ADD_MESSAGE': {\n            const chats = [...state.chats]\n            chats.filter((e: any) => e.chat_id === data.chat_id)[0].messages = [data]\n            chats.filter((e: any) => e.chat_id === data.chat_id)[0].messageAt = data.date\n            chats.sort((a, b): number => new Date(b.messageAt ? b.messageAt : '').getTime() - new Date(a.messageAt ? a.messageAt : '').getTime()) \n          return {...state, chats}\n        }\n        case 'CHANGE_USER': {\n            return {...data}\n        }\n        default: {\n          throw new Error(`Unhandled action type: ${action.type}`)\n        }\n      }\n}\nconst initialState: UserState = {\n    username: '',\n    user_id: '',\n    picture: '',\n    pub_key: '',\n    chats: [],\n    addMessageToChat: () => {},\n}\nconst UserProvider = ({children}: {children: React.ReactNode}) => {\n    const [state, dispatch] = React.useReducer(userReducer, initialState)\n    // NOTE: you *might* need to memoize this value\n    // Learn more in http://kcd.im/optimize-context\n    const value = {state, dispatch, }\n    return <UserContext.Provider value={value}>{children}</UserContext.Provider>\n}\nconst useUser = () => {\n    const context = React.useContext(UserContext)\n    if (context === undefined) {\n      throw new Error('useCount must be used within a CountProvider')\n    }\n    return context\n  }\n  \nexport {UserContext, UserProvider, useUser}","import './UserPicture.scss'\nconst UserPicture: React.FunctionComponent<{\n  picture: string, \n  username: string,\n}> = (props) => {\n  if (!props.username) return <></>\n  if (props.picture.includes('http')) {\n    return <>\n      <div className={'profile_picture'}>\n        <img src={props.picture} alt={`${props.username}'s profile pic`} className={'profile_picture__img'} ></img>\n      </div>\n    </>\n  }\n  return <>\n    <div className={'profile_picture'} style={{background: props.picture}}>\n      <span className={'profile_picture__text'}>{props.username[0].toUpperCase()}</span>\n    </div>\n  </>\n}\nexport default UserPicture","import UserPicture from \"../../../../Components/UserPicture/UserPicture\"\nimport './Header.scss'\nimport {useScreen} from \"../../../../Contexts/ScreenContext\";\n\nconst SidebarHeader = (props: {\n  user: {\n    username: string,\n    picture: string\n  }\n  setOpen: () => void\n}) => {\n  const screen = useScreen()\n  return (<>\n    <div className={'chat_sidebar__header'} onClick={(e: any) => {\n      console.log('click')\n      props.setOpen()\n    }}>\n      <UserPicture username={props.user.username} picture={props.user.picture}/>\n      <span className={'chat_sidebar__header___username'}>{props.user.username}</span> \n    </div>\n    \n  </>)\n}\nexport default SidebarHeader","import {decodeBase64, encodeBase64} from 'tweetnacl-util'\nimport {box} from 'tweetnacl'\nexport const formatKey = (key: any) => {\n  // @ts-ignore\n  // eslint-disable-next-line valid-typeof\n  return typeof key === 'Uint8Array' ? key : decodeBase64(key);\n}\n\n\nexport const generateKeyPair = () => {\n  const {publicKey, secretKey} = box.keyPair()\n  return {\n    public_key: encodeBase64(publicKey),\n    private_key: encodeBase64(secretKey),\n  }\n}\n","import {decodeBase64, encodeUTF8} from 'tweetnacl-util'\nimport {box} from 'tweetnacl'\nimport {formatKey} from './keysUtils'\n\nexport const decryptMessage = (secretOrSharedKey: any, messageWithNonce: string, key: any) => {\n  const private_key = formatKey(secretOrSharedKey)\n  const public_key = formatKey(key)\n  const messageWithNonceAsUint8Array = decodeBase64(messageWithNonce)\n  const nonce = messageWithNonceAsUint8Array.slice(0, box.nonceLength)\n  const message = messageWithNonceAsUint8Array.slice(\n      box.nonceLength,\n      messageWithNonce.length\n  )\n  const decrypted = key ?\n      box.open(message, nonce, public_key, private_key) :\n      box.open.after(message, nonce, private_key)\n\n  if (!decrypted) {\n    console.error(\"Couldn't decrypt:\")\n    console.error({messageWithNonce, key, secretOrSharedKey})\n  }\n  if (decrypted) {\n    const base64DecryptedMessage = encodeUTF8(decrypted)\n    return JSON.parse(base64DecryptedMessage)\n  }\n  return {\n    text: ''\n  }\n}\n","const isToday = (date: Date): boolean => {\n  const today = new Date()\n  return date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear();\n};\n\nconst isYesterday = (date: Date): boolean => {\n  const today = new Date()\n  return date.getDate() === today.getDate() - 1 &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear();\n}\n\nconst formatDate = (date: Date | string): string => {\n  const d = new Date(date)\n  const rl = new Intl.RelativeTimeFormat(['en'], {style: 'narrow'})\n  const now = new Date()\n  const diff = now.getTime() - d.getTime()\n  if (isToday(d)) {\n    if (now.getHours() - d.getHours() < 2) {\n      if (Math.floor(diff / 1000 / 60) === 0) {\n        return rl.format(-Math.round(diff / 1000 ), 'seconds')\n      }\n      return rl.format(-Math.round(diff / 1000 / 60), 'minutes')\n    }\n    return d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n  }\n  if (isYesterday(d)) {\n    return `yesterday` \n  }\n  else {\n    return d.toLocaleDateString([], {day: '2-digit', month: 'numeric', year: '2-digit'})\n  }\n\n}\nconst formatTime = (date: Date | string): string | boolean => {\n  const d = new Date(date)\n  const now = new Date()\n  if (isToday(d)) {\n    if (now.getHours() - d.getHours() < 2) {\n      return false\n    }\n    return `today, ${d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}`\n  }\n  else return `${formatDate(d)}, ${d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}`\n}\n\nexport {formatDate, formatTime}","import { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport TimeAgo from \"timeago-react\";\nimport UserPicture from \"../../../../Components/UserPicture/UserPicture\";\nimport config from \"../../../../config\";\nimport { ChatResponse } from \"../../../../Typings/ChatReponse\";\nimport { decryptMessage } from \"../../../../Utils/decrypt\";\nimport { formatTime } from \"../../../../Utils/formatDate\";\n\nconst ChatCard: React.FunctionComponent<{chat: ChatResponse}> = (props) => {\n  const {chat} = props\n  const [isRedirect, SetRedirect] = useState(false)\n  const handleClick = (e: any) => {\n    if (!chat.chat_id) {\n      const headers = new Headers({\n        'Content-Type': 'application/json',\n      })\n      headers.append( 'Authorization', `${localStorage.getItem('token')}`)\n      fetch(config.server_url + 'api/chat/create', {\n        method: 'POST',\n        body: JSON.stringify({\n          user_id: chat.user.user_id,\n        }),\n        headers,\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          if (res.statusCode !== 200) {\n            alert(res.message)\n          } else {\n            chat.chat_id = res.chat_id\n            SetRedirect(true)\n          }\n        })\n    }\n    else {\n      SetRedirect(true)\n    }\n  }\n  if (isRedirect) {\n    return <Redirect to={`/${chat.chat_id}`} />\n  }\n  return <>\n    <div className={'chat_list__card'} onClick={(e) => handleClick(e)}>\n      <UserPicture username={chat.user.username} picture={chat.user.picture}/>\n      <div className={'right'}>\n        <div className={'chat_list__card___top'}>\n          <span className={'chat_list__card___top____username'}>{chat.user.username}</span>\n          <span className={'chat_list__card___top____date'}>\n            {chat.messages[0] && chat.messageAt ? formatTime(chat.messageAt) ? formatTime(chat.messageAt) : <TimeAgo datetime={chat.messageAt} opts={{minInterval: 5}}/> : ''}\n          </span>\n        </div>\n        <div className={'chat_list__card___bottom'}>\n          <span className={'chat_list__card___bottom____content'}>{\n            chat.messages[0] ? decryptMessage(localStorage.getItem('key'),chat.messages[0].content, chat.user.pub_key).text : ''\n          }</span>\n        </div>\n      </div>\n    </div>\n  </>\n}\n\nexport default ChatCard","import React from 'react'\nimport { SearchFilter } from '../Typings/SearchFilter'\n\ntype Action = {type: 'CHANGE_FILTER', payload: {\n    type: string\n    filter: string\n}} | {type: 'CHANGE_CHATS', payload: {\n    chats: Array<{\n        username: string\n        picture: string\n        user_id: string\n    }>\n}}\ntype Dispatch = (action: Action) => void\n\nconst SearchContext = React.createContext<\n{state: SearchFilter; dispatch: Dispatch;} | undefined\n>(undefined)\n\nconst searchReducer = (state: SearchFilter, action: Action) => {\n    switch (action.type) {\n        case 'CHANGE_FILTER':\n            if (action.payload.type === 'users')\n                if (action.payload.filter === '')\n                    return {\n                        ...state, \n                        chats: [],\n                        [action.payload.type]: action.payload.filter\n                    }\n            return {\n                    ...state, \n                    [action.payload.type]: action.payload.filter\n                }\n        case 'CHANGE_CHATS': \n            return {\n                ...state,\n                chats: action.payload.chats\n            }\n        default: {\n          throw new Error(`Unhandled action type: ${action}`)\n        }\n      }\n}\nconst initialState: SearchFilter = {\n    users: '',\n    messages: '',\n    chats: []\n}\nconst SearchProvider = ({children}: {children: React.ReactNode}) => {\n    const [state, dispatch] = React.useReducer(searchReducer, initialState)\n    // NOTE: you *might* need to memoize this value\n    // Learn more in http://kcd.im/optimize-context\n    const value = {state, dispatch, }\n    return <SearchContext.Provider value={value}>{children}</SearchContext.Provider>\n}\nconst useSearch = () => {\n    const context = React.useContext(SearchContext)\n    if (context === undefined) {\n      throw new Error('useCount must be used within a CountProvider')\n    }\n    return context\n  }\n  \nexport {SearchContext, SearchProvider, useSearch}","import { ChatResponse } from '../../../../Typings/ChatReponse'\nimport ChatCard from './ChatCard'\nimport {nanoid} from 'nanoid'\nimport './ChatList.scss'\nimport { useUser } from '../../../../Contexts/UserContext'\nimport { useSearch } from '../../../../Contexts/SearchReducer'\nconst ChatList = () => {\n  const {state} = useUser()\n  const search = useSearch()\n  const ChatCards: Array<React.FunctionComponentElement<{chat: ChatResponse}>> = []\n  if (search.state.chats) \n    search.state.chats.forEach(user => {\n      ChatCards.push(<ChatCard chat={{\n        chat_id: '',\n        user,\n        messages: []\n      }} key={nanoid(5)}/>)\n    })\n  state.chats.forEach(chat => {\n    if (search.state.users) {\n        if (chat.user.username.toLowerCase().includes(search.state.users.toLowerCase())) {\n          ChatCards.push(<ChatCard chat={chat} key={nanoid(5)}/>)\n        }\n    }\n    else \n      ChatCards.push(<ChatCard chat={chat} key={nanoid(5)}/>)\n  })\n  return <>\n    <div className={'chat_list'}>{ChatCards}</div>\n  </>\n}\nexport default ChatList","import config from '../../../../config'\nimport { useSearch } from '../../../../Contexts/SearchReducer'\nimport { useUser } from '../../../../Contexts/UserContext'\nimport './Search.scss'\nimport {useRef} from \"react\";\n\nconst SidebarSearch = (props: {\n  isOpened: boolean,\n  setOpened: (s: boolean) => void\n}) => {\n  const search = useSearch()\n  const input = useRef<HTMLInputElement>(null)\n  const handleSearch = (e: {target: {value: string}}) => {\n    search.dispatch({type: 'CHANGE_FILTER', payload: {\n      type: 'users',\n      filter: e.target.value\n    }})\n    if (e.target.value.length < 3) {\n      search.dispatch({type: 'CHANGE_CHATS', payload: {\n        chats: []\n      }})\n      return\n    }\n    if (localStorage.getItem('token')) {\n      const headers = new Headers({\n        'Content-Type': 'application/json',\n      })\n      headers.append( 'Authorization', `${localStorage.getItem('token')}`)\n      fetch(config.server_url + 'api/users/search', {\n        method: 'POST',\n        body: JSON.stringify({\n          query: e.target.value,\n        }),\n        headers,\n      })\n      .then((res) => res.json())\n      .then((res: {statusCode: number, message?: string, data?: {users: Array<{\n        username: string\n        picture: string\n        user_id: string\n    }>}}) => {\n        if (res.statusCode !== 200) {\n          alert(res.message)\n        } else {\n          if (res.data)\n            search.dispatch({\n              type: 'CHANGE_CHATS',\n              payload: {chats: res.data.users}\n            })\n        }\n      })\n    }\n  }\n  return (<>\n    <div className={'chat_sidebar__search'}>\n      <div className={'chat_sidebar__search___bar'} onClick={(e) => {\n        if (!props.isOpened) {\n          props.setOpened(true)\n          if (input.current !== null) {\n            setTimeout(() => {if (input.current !== null) input.current.focus()}, 100)\n          }\n        }\n      }}>\n        <span className=\"material-icons outlined\">\n          search\n        </span>\n        <input type={'text'} className={'chat_sidebar__search___bar-input'} placeholder={'Search users'} ref={input} onChange={(e) => handleSearch(e)}/>\n      </div>\n    </div>\n  </>)\n}\nexport default SidebarSearch","import SidebarHeader from \"./Header/Header\"\nimport './Sidebar.scss'\nimport ChatList from \"./ChatList/ChatList\"\nimport { useUser } from \"../../../Contexts/UserContext\"\nimport SidebarSearch from \"./Search/Search\"\nimport { SearchProvider } from \"../../../Contexts/SearchReducer\"\nimport {useScreen} from \"../../../Contexts/ScreenContext\";\nimport {useEffect, useState} from \"react\";\n\nconst Sidebar = (props: {\n}) => {\n  const {state} = useUser()\n  const screen = useScreen()\n  const [isOpened, setOpen] = useState(screen.state.width > 700)\n  useEffect(() => {\n    setOpen(screen.state.width > 700)\n  }, [screen.state]);\n\n  return <>\n  <SearchProvider>\n    <div className={`chat_sidebar ${isOpened ? 'opened' : 'closed'}`}>\n      <SidebarHeader user={{username: state.username, picture: state.picture}} setOpen={() => {\n        console.log(!isOpened)\n        setOpen(!isOpened)\n      }}/>\n      <SidebarSearch isOpened={isOpened} setOpened={(_: boolean) => setOpen(_)} />\n      <ChatList />\n    </div>\n  </SearchProvider>\n  </>\n}\nexport default Sidebar;","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { decryptMessage } from \"../../../Utils/decrypt\"\nimport { formatTime } from '../../../Utils/formatDate'\nimport TimeAgo from 'timeago-react';\nimport { useParams } from \"react-router\";\nconst Message: React.FunctionComponent<{\n  content: string\n  pub_key: string\n  date: Date\n  fromMe: boolean\n  isRead: boolean\n  id: string\n  socket: WebSocket\n  subscribeToScroll: Function\n}> = (props) => {\n  let content:string = useMemo(() => {\n    try {\n      return decryptMessage(localStorage.getItem('key'), props.content, props.pub_key).text\n    } catch (error) {\n      console.log({error, props})\n      return ''\n    }\n  }, [props]);\n  const [isRead, setRead] = useState(props.isRead)\n  const messageRef = useRef<HTMLDivElement>(null)\n  const isActionSent = useRef(false)\n  const params: {id: string} = useParams()\n  const scrollCallback = () => {\n    if (isRead || props.fromMe || isActionSent.current) return\n    const rect = messageRef.current?.getBoundingClientRect()\n    if (rect) {\n      if (rect.top > 0) {\n        console.log(props.id)\n          props.socket.send(JSON.stringify({\n            action: 'mark_as_read',\n            chatId: params.id,\n            messageId: props.id,\n            token: localStorage.getItem('token')\n          }))\n          isActionSent.current = true\n          console.log(content)\n          setRead(true)\n      }\n    }\n  }\n  useEffect(() => {\n    if (!isRead && !props.fromMe) {\n        const a = props.subscribeToScroll(scrollCallback)\n        return a()\n    }\n    if (!isRead && props.fromMe) {\n      props.socket.addEventListener('message', (ev) => {\n        const response = JSON.parse(ev.data)\n        if (response.action === 'message_read_by_user') {\n          if (response.data.chat_id === params.id && response.data.message_id === props.id){\n            setRead(true)\n          }\n        }\n      })\n    }\n  }, [isRead])\n  useEffect(() => {\n    scrollCallback()\n  }, [])\n  return <>\n    <div className={`chat_dialog__messages-message ${props.fromMe ? 'fromMe' : 'toMe'}`} ref={messageRef}>\n      <div className={`chat_dialog__messages-message_top ${props.fromMe ? 'fromMe' : 'toMe'}`} >\n        <div className={`chat_dialog__messages-message_top-bubble ${props.fromMe ? 'fromMe' : 'toMe'}`}>\n          <span>{content}</span>\n        </div>\n        <div className={`chat_dialog__messages-message_top-context`}>\n          <span className=\"material-icons\">\n            more_horiz\n          </span>\n        </div>\n        {\n          props.fromMe ? (<div className={`chat_dialog__messages-message_top-status`}>\n          <span className=\"material-icons\">\n            {isRead ? 'done_all' :'done'}\n          </span>\n        </div>) : ''\n        }\n        \n      </div>\n      <div className={`chat_dialog__messages-message_bottom ${props.fromMe ? 'fromMe' : 'toMe'}`}>\n      {formatTime(props.date) ? formatTime(props.date) :<TimeAgo\n        datetime={props.date}\n        opts={{minInterval: 10}}\n      />}\n      </div>\n    </div>\n  </>\n}\n\nexport default Message","import React from 'react'\nimport { Message } from '../Typings/Message'\n\ntype Action = {type: 'ADD_MESSAGE', payload: any} | \n    {type: 'ADD_MORE_MESSAGES', payload: any} | \n    {type: 'CHANGE_KEY', payload: any} | \n    {type: 'REMOVE_MESSAGE', payload: any} | \n    {type: 'EDIT_MESSAGE', payload: any} | \n    {type: 'CHANGE_DIALOG', payload?: any} |\n    {type: 'SET_DIALOG_DATA', payload?: {\n        username?: string,\n        pub_key?: string,\n        user_id?: string,\n        picture?: string\n    }} |\n    {type: 'SET_MESSAGE_READ_STATUS', payload: {id: string}}\ntype Dispatch = (action: Action) => void\ntype DialogState = {\n    messages: Message[],\n    username: string,\n    pub_key: string,\n    picture: string\n    user_id: string,\n}\nconst DialogContext = React.createContext<\n{state: DialogState; dispatch: Dispatch} | undefined\n>(undefined)\nconst dialogReducer = (state: DialogState, action: Action) => {\n    const data = action.payload\n    console.log(action)\n    switch (action.type) {\n        case 'ADD_MESSAGE': {\n            state.messages.push(...data)\n            return {...state}\n        }\n        case 'ADD_MORE_MESSAGES': {\n            state.messages = [...data, ...state.messages]\n            return {...state}\n        }\n        case 'CHANGE_DIALOG': {\n            return {\n                username: '',\n                user_id: '',\n                picture: '',\n                pub_key: '',\n                messages: [],\n            }\n        }\n        case 'CHANGE_KEY': {\n            state.pub_key = action.payload\n            return state\n        }\n        case 'SET_MESSAGE_READ_STATUS': {\n            const msg = state.messages.filter(x => x.message_id === data.id)[0]\n            msg.read = true\n            console.log(state)\n            return state\n        }\n        case 'SET_DIALOG_DATA': {\n            return {...state, ...data}\n        }\n        default: {\n          throw new Error(`Unhandled action type: ${action.type}`)\n        }\n      }\n}\nconst initialState: DialogState = {\n    username: '',\n    user_id: '',\n    picture: '',\n    pub_key: '',\n    messages: [],\n}\nconst DialogProvider = ({children}: {children: React.ReactNode}) => {\n    const [state, dispatch] = React.useReducer(dialogReducer, initialState)\n    const value = {state, dispatch, }\n    return <DialogContext.Provider value={value}>{children}</DialogContext.Provider>\n}\nconst useDialog = () => {\n    const context = React.useContext(DialogContext)\n    if (context === undefined) {\n      throw new Error('useCount must be used within a CountProvider')\n    }\n    return context\n  }\n  \nexport {DialogContext, DialogProvider, useDialog}","import {useRef, useState} from 'react'\nimport { useDialog } from '../../../Contexts/DialogContext'\nimport { encryptMessage } from '../../../Utils/encrypt'\n\nconst MessageInput: React.FunctionComponent<{\n  socket: WebSocket,\n  chat_id: string\n}> = (props) => {\n  const [message, setMessage] = useState('')\n  const {state} = useDialog()\n  const handleInput = (e: any) => {\n    setMessage(e.target.value)\n  }\n  const inputRef = useRef<HTMLInputElement>(null)\n  const handleSend = (e: any) => {\n    e.preventDefault()\n    const msg = encryptMessage(\n      localStorage.getItem('key'),\n      {\n        text: message,\n      },\n      state.pub_key\n    )\n    props.socket.send(JSON.stringify(\n      {\n        action: 'send_message',\n        chatId: props.chat_id,\n        content: msg,\n        token: localStorage.getItem('token'),\n      }\n  ))\n    if (inputRef.current)\n      inputRef.current.value = ''\n      setMessage('')\n  }\n  return <>\n    <div className={'chat_dialog__input'}>\n        <div className={'chat_dialog__input-wrap'}>\n            <form action=\"\" onSubmit={(e) => handleSend(e)}>\n                <input type={'text'} placeholder={'Write a message...'} onInput={(e) => handleInput(e)} ref={inputRef}/>    \n                <button type={'submit'} className={'material-icons'}>send</button>\n            </form>    \n        </div>\n    </div>\n  </>\n}\n\nexport default MessageInput","\nimport nacl, {box} from 'tweetnacl'\nimport {decodeUTF8, encodeBase64} from 'tweetnacl-util'\nimport {formatKey} from './keysUtils'\n\nexport const encryptMessage = (secretOrSharedKey: any, json: any, key: any) => {\n  const private_key = formatKey(secretOrSharedKey)\n  const public_key = formatKey(key)\n  const nonce = nacl.randomBytes(box.nonceLength)\n  const messageUint8 = decodeUTF8(JSON.stringify(json))\n  const encrypted = public_key ?\n      box(messageUint8, nonce, public_key, private_key) :\n      box.after(messageUint8, nonce, private_key)\n\n  const fullMessage = new Uint8Array(nonce.length + encrypted.length)\n  fullMessage.set(nonce)\n  fullMessage.set(encrypted, nonce.length)\n  return encodeBase64(fullMessage)\n}\n","const DialogHeader: React.FunctionComponent<{\n  socket: WebSocket,\n}> = (props) => {\n  return <>\n    <div className={'chat_dialog__header'}>\n    </div>\n  </>\n}\n\nexport default DialogHeader","import { nanoid } from \"nanoid\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport Preloader from \"../../../Components/Preloader/Preloader\";\nimport Message from \"./Message\";\nimport './Dialog.scss'\nimport MessageInput from \"./MessageInput\";\nimport { useParams } from \"react-router\";\nimport { useDialog } from \"../../../Contexts/DialogContext\";\nimport DialogHeader from \"./DialogHeader\";\nimport { useUser } from \"../../../Contexts/UserContext\";\n\nconst Dialog: React.FunctionComponent<{socket: WebSocket}> = (props) => {\n  const [isLoading, setLoading] = useState(true)\n  const params: {id: string} = useParams()\n  const page = useRef(0)\n  const prevScrollHeight = useRef(0)\n  const [isRequested, setRequested] = useState(false)\n  const dialog = useDialog()\n  const user = useUser()\n  const [msg, setMsg] = useState<Array<JSX.Element>>([])\n  const messagesDiv = useRef<HTMLDivElement>(null)\n  const callbacks = useRef<Array<Function>>([])\n  const subcribeToScroll = (callback: Function) => {\n    callbacks.current.push(callback)\n    return () => callbacks.current.filter(x => x !== callback)\n  }\n  const scrollCallback = (e: any) => {\n    callbacks.current.forEach(callback => {\n      callback(e)\n    });\n    if (e.target.scrollTop === 0) {\n      if (!isRequested) {\n        page.current = page.current + 1\n        prevScrollHeight.current = messagesDiv.current? messagesDiv.current.scrollHeight : 0\n        setRequested(true)\n        props.socket.send(\n          JSON.stringify({\n            action: 'get_messages',\n            chat_id: params.id,\n            pg: page.current,\n            jwt: localStorage.getItem('token'),\n          })\n        )\n      }\n    }\n  }\n  const callback = useCallback((ev: MessageEvent<any>) => {\n    const response = JSON.parse(ev.data)\n    if (response.action === 'get_messages') {\n      if (page.current === 0) {\n        dialog.dispatch({type: 'CHANGE_DIALOG'})\n        callbacks.current = []\n        dialog.dispatch({type: 'CHANGE_KEY', payload: response.pub_key})\n        dialog.dispatch({type: 'ADD_MESSAGE', payload: response.messages})\n      }\n      else {\n        if (response.messages[0]) {\n          dialog.dispatch({type: 'ADD_MORE_MESSAGES', payload: response.messages})\n          setRequested(false)\n        } \n      }\n      setLoading(false)\n    }\n    if (response.action === 'new_message') {\n      if (response.data.message.chat_id === params.id){\n        console.log(response.data.message.chat_id, params.id)\n        dialog.dispatch({type: 'ADD_MESSAGE', payload: [{\n          content: response.data.message.content,\n          pub_key: dialog.state.pub_key,\n          date: response.data.message.date,\n          fromMe: response.data.message.isMe,\n          read: response.data.message.read,\n          message_id: response.data.message.message_id\n        }]})\n      }\n    }\n    if (response.action === 'message_read_by_user') {\n      if (response.data.chat_id === params.id)\n        dialog.dispatch({type: 'SET_MESSAGE_READ_STATUS', payload: {\n          id: response.data.message_id\n        }})\n    }\n  }, [dialog.state.user_id])\n  useEffect(() => {\n    const msgComp: Array<JSX.Element> = []\n    dialog.state.messages.forEach((m: {\n      content: string,\n      fromMe: boolean,\n      date: Date,\n      read: boolean,\n      message_id: string\n  }) => {\n      return msgComp.push(<Message socket={props.socket} id={m.message_id} subscribeToScroll={(c: Function) => subcribeToScroll(c)} isRead={m.read} content={m.content} pub_key={dialog.state.pub_key} key={nanoid(6)} fromMe={m.fromMe} date={m.date} />)\n  });\n    setMsg(msgComp)\n  },[dialog.state])\n  useEffect(() => {\n    if (messagesDiv.current && (messagesDiv.current.scrollTop > 1000 || page.current === 0))\n      messagesDiv.current.scrollTo(0,messagesDiv.current ? messagesDiv.current.scrollHeight : 0);\n    else if (messagesDiv.current)\n      messagesDiv.current.scrollTo(0,messagesDiv.current ? messagesDiv.current.scrollHeight - prevScrollHeight.current : 0);\n  }, [msg])\n  useEffect(() => {\n    props.socket.addEventListener('message', callback)\n    dialog.dispatch({type: 'CHANGE_DIALOG'})\n    page.current = 0\n    setLoading(true)\n    props.socket.send(\n      JSON.stringify({\n        action: 'get_messages',\n        chat_id: params.id,\n        pg: 0,\n        jwt: localStorage.getItem('token'),\n      })\n    )\n    return () => {\n      // props.socket.removeEventListener('open', onOpenCallback)\n      props.socket.removeEventListener('message', callback)\n    }\n  }, [callback, params.id, props.socket])\n  if (!params.id) {\n    return <div></div>\n  }\n  if (isLoading) return <div className={'preloader'}><Preloader /></div>\n  return <>\n    <div className={'chat_dialog'}>\n      <DialogHeader socket={props.socket} />\n      <div className={'chat_dialog__messages'} onScroll={(e) => scrollCallback(e)} ref={messagesDiv}>{msg}</div>\n      <MessageInput socket={props.socket} chat_id={params.id}/>\n    </div>\n  </>\n}\nexport default Dialog","import Sidebar from \"./Sidebar/Sidebar\"\nimport './Chat.scss'\nimport config from '../../config'\nimport React, {useEffect, useRef, useState } from \"react\"\nimport Preloader from '../../Components/Preloader/Preloader'\nimport { useParams } from \"react-router-dom\"\nimport Dialog from \"./Dialog/Dialog\"\nimport { useUser} from '../../Contexts/UserContext'\nimport { DialogProvider } from \"../../Contexts/DialogContext\"\n\nconst Chat = () => {\n  const params: {id: string} = useParams()\n  const socket = useRef(new WebSocket(config.socket_url))\n  const token = localStorage.getItem('token')\n  const {dispatch} = useUser()\n  const [isLoading, setLoading] = useState(true)\n\n  // Function to bind socket and listen to it's actions\n  const onSocketMessage = (event: any) => {\n    const response = JSON.parse(event.data)\n    console.dir(response)\n    if (!response.data) {\n      return\n    }\n    if (response.data.message === 'Successful connection') {\n      console.warn(`Socket: Successful connection`)\n    }\n    if (response.action === 'new_message') {\n      const message = response.data.message\n      dispatch({type: 'ADD_MESSAGE', payload: message})\n    }\n  }\n  const bindSocket = () => {\n    socket.current.onopen = () => {\n      socket.current.send(\n          JSON.stringify({action: 'register', jwt: token})\n      )\n    }\n    socket.current.addEventListener('message', onSocketMessage)\n  }\n  const fetchData = () => {\n    fetch(config.server_url + 'api/users/getInfo', {\n      method: 'POST',\n      mode: 'cors',\n      body: JSON.stringify({}),\n      headers: {\n        'Authorization': token ? token : '',\n        'Content-Type': 'application/json',\n      },\n    })\n        .then((res) => res.json())\n        .then((res) => {\n          if (res.statusCode !== 200) {\n            console.error(res)\n          } else {\n            const rsp = res.response\n            dispatch({type: 'CHANGE_USER', payload: {...rsp}})\n            setLoading(false)\n          }\n        })\n  }\n  useEffect(() => {\n    bindSocket()\n    fetchData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    return () => socket.current.removeEventListener('message', onSocketMessage)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  if (params.id === undefined) {\n    console.log('No chat')\n    return <div className={'chat'}>\n    <Sidebar />\n    </div>\n  }\n  if (isLoading) {\n    return <Preloader />\n  }\n\n  return <div className={'chat'}>\n      <Sidebar/>\n      <DialogProvider>\n        <Dialog socket={socket.current}/> \n      </DialogProvider>\n    </div>\n}\nexport default Chat","import React, {useState, useEffect} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Preloader from \"../../Components/Preloader/Preloader\";\nimport config from '../../config'\nimport { UserProvider } from '../../Contexts/UserContext';\nimport Chat from '../Chat/Chat';\n\nconst Home: React.FunctionComponent = () => {\n  const [isLoggined, setLoginned] = useState(0)\n  const token = localStorage.getItem('token')\n\n  // Check if authenticated\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      fetch(config.server_url+ 'api/checkAuth', {\n        method: 'POST',\n        body: JSON.stringify({token}),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n          .then((res) => res.json())\n          .then((res) => setLoginned(res.statusCode === 200 ? 2 : 1))\n    } else {\n      setLoginned(1)\n    }\n  }, [token])\n    if (isLoggined === 0) {\n    return <Preloader />\n  }\n\n  if (isLoggined === 1) {\n    return <Redirect to={'/login'}/>\n  }\n\n\n  return (<UserProvider>\n    <Chat />\n  </UserProvider>)\n  \n}\n\nexport default Home\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport './Register.scss';\nimport Preloader from \"../../Components/Preloader/Preloader\";\nimport config from '../../config'\nimport { generateKeyPair } from \"../../Utils/keysUtils\";\n\nconst Register: React.FunctionComponent = () => {\n  const [key, setKeys] = useState(generateKeyPair())\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  })\n  const [doesMeetReqs, setMeetReq] = useState(false)\n  const [stage, setStage] = useState(0)\n  const [isSame, setSame] = useState(false)\n  const [isLoading, setLoading] = useState(true)\n  const handleChange = (e: any) => {\n    console.log(e.target.name, e.target.value)\n    if (e.target.name === 'verify_password') {\n        if (e.target.value === credentials.password) {\n          setSame(true)\n        }\n        else {\n          setSame(false)\n        }\n    }\n    else {\n        setCredentials({\n            ...credentials,\n            [e.target.name]: e.target.value\n        })\n        if (e.target.name === 'password') {\n          let pass_regexp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,31}$/ // 8 to 31 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\n          if (e.target.value.match(pass_regexp)) {\n            setMeetReq(true)\n          }\n          else {\n            setMeetReq(false)\n          }\n        }\n    }\n  }\n  const handleRegister = (credentials: {\n    username?: string,\n    password?: string,\n    key?:string\n  }, stage: number, setStage: any) => {\n    if (!credentials.password || !credentials.username) return\n    if (!isSame) return\n    let pass_regexp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,31}$/ // 8 to 31 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\n    if (!credentials.password.match(pass_regexp)) {\n\n\n    }\n    if (stage === 0) {\n        fetch(config.server_url + 'api/register', {\n        method: 'POST',\n        body: JSON.stringify({...credentials, pub_key: key.public_key}),\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        })\n            .then((res) => res.json())\n            .then((res) => {\n            if (res.statusCode !== 200) {\n                alert(res.message)\n            } else {\n                localStorage.setItem('token', res.token)\n                setStage(1)\n            }\n            })\n        }\n        else {\n          if (key.private_key != null) {\n              localStorage.setItem('key', key.private_key)\n              if (localStorage.getItem('key')) setStage(2)\n          }\n        }\n  }\n  const firstStage = () => {\n    return (\n        <>\n          <h1>Cryptash</h1>\n          <input name={'username'} placeholder={'Username'} className={'register_main__form___username'} onChange={(e) => handleChange(e)}/>\n          <input name={'password'} type={'password'} placeholder={'Password'} className={`register_main__form___password ${doesMeetReqs ? '' : 'red-outline'}`} onChange={(e) => handleChange(e)}/>\n          <input name={'verify_password'} type={'password'} placeholder={'Verify Password'} className={`register_main__form___password ${isSame ? '' : 'red-outline'}`} onChange={(e) => handleChange(e)}/>\n          <button type={'submit'} className={'register_main__form___submit'} disabled={!isSame}>Create account</button>\n          <Link to={'/login'}>Back to login</Link>\n        </>\n  )\n  }\n  const keyInput = useRef(null)\n  const secondStage = () => {\n    localStorage.setItem('key', key.private_key)\n    if (stage === 1) return (\n        <>\n          <h3>One more thing</h3>\n          <h4>Please, write down your private key!</h4>\n          <div className={'register_main__form___key-wrapper'}>\n          <input key={key.private_key} name={'key'} type={'text'} defaultValue={key.private_key} className={'register_main__form___key-wrapper'} ref={keyInput}></input>\n          <span className=\"material-icons outlined register_main__form___copy\" onClick={(e) => {\n            if (keyInput.current){\n              //@ts-ignore\n              keyInput.current.select()\n            } \n            document.execCommand(\"copy\")\n          }}>\n            content_copy\n          </span>\n          </div>\n          <button type={'submit'} className={'register_main__form___submit'}>Create account</button>\n        </>\n    )\n    else return <Redirect to={'/'} />\n  }\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      fetch(config.server_url + 'api/checkAuth', {\n        method: 'POST',\n        body: JSON.stringify({token: localStorage.getItem('token')}),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n          .then((res) => res.json())\n          .then((res) => {\n            if (res.statusCode === 200) {\n              setLoading(false)\n              setStage(2)\n            }\n          })\n    }\n    else {\n      setLoading(false)\n    }\n  }, [])\n  if (isLoading) return <Preloader />\n  return <>\n    <div className=\"register_main\">\n      <div className={'register_main__header'}>\n          <h1 className={'register_main__header___title'}>Create your account</h1>\n          <h2 className={'register_main__header___undertitle'}>If you already have an account, login using button below</h2>\n      </div>\n      <div className={'register_main__block'}>\n        <form className={'register_main__form'} onSubmit={(e) =>{\n          e.preventDefault()\n          handleRegister(credentials, stage, setStage)\n        }}>\n          {stage ? secondStage() : firstStage()}\n        </form>\n      </div>\n    </div>\n  </>\n\n}\n\nexport default Register\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// @ts-ignore\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\nimport Login from './Pages/Login/Login';\nimport Home from './Pages/Home/Home';\nimport Register from './Pages/Register/Register';\nimport { ScreenProvider } from './Contexts/ScreenContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ScreenProvider>\n      <BrowserRouter>\n        <App>\n          <Route exact path='/login' component={Login}/>\n          <Route exact path='/register' component={Register}/>\n          <Route path={['/:id', '/']} exact component={Home} />\n        </App>\n      </BrowserRouter>\n    </ScreenProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}